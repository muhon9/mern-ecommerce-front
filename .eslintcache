[{"D:\\MERN\\client\\src\\index.js":"1","D:\\MERN\\client\\src\\App.js":"2","D:\\MERN\\client\\src\\reportWebVitals.js":"3","D:\\MERN\\client\\src\\pages\\Home.js":"4","D:\\MERN\\client\\src\\pages\\auth\\Registration.js":"5","D:\\MERN\\client\\src\\pages\\auth\\Login.js":"6","D:\\MERN\\client\\src\\components\\Navbar.js":"7","D:\\MERN\\client\\src\\pages\\auth\\firebaseConfig.js":"8","D:\\MERN\\client\\src\\pages\\auth\\RegistrationComplete.js":"9","D:\\MERN\\client\\src\\reducers\\rootReducer.js":"10","D:\\MERN\\client\\src\\reducers\\userReducer.js":"11","D:\\MERN\\client\\src\\functions\\authFunctions.js":"12","D:\\MERN\\client\\src\\pages\\users\\History.js":"13","D:\\MERN\\client\\src\\components\\routes\\UserProtectedRoutes.js":"14","D:\\MERN\\client\\src\\components\\routes\\RedirectingTo.js":"15","D:\\MERN\\client\\src\\components\\UserNav.js":"16","D:\\MERN\\client\\src\\pages\\users\\Password.js":"17","D:\\MERN\\client\\src\\pages\\users\\Wishlist.js":"18","D:\\MERN\\client\\src\\components\\routes\\AdminProtectedRoutes.js":"19","D:\\MERN\\client\\src\\pages\\admin\\AdminDashboard.js":"20","D:\\MERN\\client\\src\\functions\\categoryFunctions.js":"21","D:\\MERN\\client\\src\\components\\AdminNav.js":"22","D:\\MERN\\client\\src\\pages\\admin\\categories\\CreateCategory.js":"23","D:\\MERN\\client\\src\\pages\\admin\\categories\\UpdateCategory.js":"24","D:\\MERN\\client\\src\\components\\forms\\LocalSearch.js":"25","D:\\MERN\\client\\src\\pages\\admin\\sub\\CreateSub.js":"26","D:\\MERN\\client\\src\\functions\\subFunctions.js":"27","D:\\MERN\\client\\src\\pages\\admin\\sub\\UpdateSub.js":"28","D:\\MERN\\client\\src\\pages\\product\\CreateProduct.js":"29","D:\\MERN\\client\\src\\functions\\productFunction.js":"30","D:\\MERN\\client\\src\\pages\\product\\ListProducts.js":"31","D:\\MERN\\client\\src\\components\\forms\\FileUpload.js":"32","D:\\MERN\\client\\src\\components\\cards\\AdminProductCards.js":"33","D:\\MERN\\client\\src\\pages\\product\\UpdateProduct.js":"34","D:\\MERN\\client\\src\\components\\cards\\ProductCards.js":"35","D:\\MERN\\client\\src\\components\\cards\\Jumbotron.js":"36","D:\\MERN\\client\\src\\components\\cards\\SkeletonCard.js":"37","D:\\MERN\\client\\src\\components\\home\\NewArrivals.js":"38","D:\\MERN\\client\\src\\components\\home\\BestSeller.js":"39","D:\\MERN\\client\\src\\pages\\Product.js":"40","D:\\MERN\\client\\src\\components\\cards\\SingleProductCard.js":"41","D:\\MERN\\client\\src\\components\\cards\\ProductDetailsList.js":"42","D:\\MERN\\client\\src\\components\\modals\\RatingModals.js":"43","D:\\MERN\\client\\src\\functions\\ratingFunction.js":"44","D:\\MERN\\client\\src\\components\\category\\CategoryListing.js":"45","D:\\MERN\\client\\src\\pages\\category\\CategoryProductHome.js":"46","D:\\MERN\\client\\src\\components\\subCategory\\subCategoryListing.js":"47","D:\\MERN\\client\\src\\pages\\sub\\SubsCategoryHome.js":"48","D:\\MERN\\client\\src\\components\\SearchFilter.js":"49","D:\\MERN\\client\\src\\reducers\\queryReducer.js":"50","D:\\MERN\\client\\src\\pages\\product\\Shop.js":"51","D:\\MERN\\client\\src\\components\\forms\\Star.js":"52","D:\\MERN\\client\\src\\reducers\\cartReducer.js":"53","D:\\MERN\\client\\src\\pages\\Cart.js":"54","D:\\MERN\\client\\src\\components\\cards\\ProductCardCheckOut.js":"55","D:\\MERN\\client\\src\\reducers\\drawerReducer.js":"56","D:\\MERN\\client\\src\\components\\drawer\\SideDrawer.js":"57","D:\\MERN\\client\\src\\pages\\CheckOut.js":"58","D:\\MERN\\client\\src\\functions\\userFunctions.js":"59","D:\\MERN\\client\\src\\pages\\admin\\Coupon.js":"60","D:\\MERN\\client\\src\\functions\\couponFunctions.js":"61","D:\\MERN\\client\\src\\pages\\Payment.js":"62","D:\\MERN\\client\\src\\reducers\\couponReducer.js":"63","D:\\MERN\\client\\src\\components\\CheckoutForm.js":"64","D:\\MERN\\client\\src\\functions\\stripFunction.js":"65","D:\\MERN\\client\\src\\components\\order\\Invoice.js":"66","D:\\MERN\\client\\src\\components\\order\\OrderBoard.js":"67","D:\\MERN\\client\\src\\functions\\adminFunction.js":"68","D:\\MERN\\client\\src\\components\\order\\PaymentInfo.js":"69"},{"size":886,"mtime":1609534516924,"results":"70","hashOfConfig":"71"},{"size":6586,"mtime":1616274813025,"results":"72","hashOfConfig":"71"},{"size":362,"mtime":499162500000,"results":"73","hashOfConfig":"71"},{"size":1539,"mtime":1614515785914,"results":"74","hashOfConfig":"71"},{"size":1381,"mtime":1616232554510,"results":"75","hashOfConfig":"71"},{"size":3861,"mtime":1611522743068,"results":"76","hashOfConfig":"71"},{"size":2667,"mtime":1614588310868,"results":"77","hashOfConfig":"71"},{"size":526,"mtime":1609406309868,"results":"78","hashOfConfig":"71"},{"size":2742,"mtime":1609922232832,"results":"79","hashOfConfig":"71"},{"size":477,"mtime":1615403806109,"results":"80","hashOfConfig":"71"},{"size":247,"mtime":1609525874326,"results":"81","hashOfConfig":"71"},{"size":552,"mtime":1616231917053,"results":"82","hashOfConfig":"71"},{"size":2674,"mtime":1616146475874,"results":"83","hashOfConfig":"71"},{"size":430,"mtime":1609965983218,"results":"84","hashOfConfig":"71"},{"size":597,"mtime":1609966023019,"results":"85","hashOfConfig":"71"},{"size":593,"mtime":1613509038222,"results":"86","hashOfConfig":"71"},{"size":1467,"mtime":1610092846620,"results":"87","hashOfConfig":"71"},{"size":384,"mtime":1609967132525,"results":"88","hashOfConfig":"71"},{"size":828,"mtime":1610139975674,"results":"89","hashOfConfig":"71"},{"size":1409,"mtime":1616148325300,"results":"90","hashOfConfig":"71"},{"size":1125,"mtime":1616233394434,"results":"91","hashOfConfig":"71"},{"size":1054,"mtime":1610191331031,"results":"92","hashOfConfig":"71"},{"size":3397,"mtime":1610308333389,"results":"93","hashOfConfig":"71"},{"size":2132,"mtime":1613335185138,"results":"94","hashOfConfig":"71"},{"size":457,"mtime":1610308344927,"results":"95","hashOfConfig":"71"},{"size":4084,"mtime":1610440265620,"results":"96","hashOfConfig":"71"},{"size":901,"mtime":1616232268867,"results":"97","hashOfConfig":"71"},{"size":3149,"mtime":1613337718789,"results":"98","hashOfConfig":"71"},{"size":7250,"mtime":1610701760945,"results":"99","hashOfConfig":"71"},{"size":1691,"mtime":1616232212234,"results":"100","hashOfConfig":"71"},{"size":2286,"mtime":1611079808818,"results":"101","hashOfConfig":"71"},{"size":3091,"mtime":1616233372511,"results":"102","hashOfConfig":"71"},{"size":1043,"mtime":1610655639420,"results":"103","hashOfConfig":"71"},{"size":8430,"mtime":1611053421145,"results":"104","hashOfConfig":"71"},{"size":2620,"mtime":1616228270279,"results":"105","hashOfConfig":"71"},{"size":377,"mtime":1611142940864,"results":"106","hashOfConfig":"71"},{"size":510,"mtime":1611173723153,"results":"107","hashOfConfig":"71"},{"size":1941,"mtime":1611223071094,"results":"108","hashOfConfig":"71"},{"size":1912,"mtime":1611428926859,"results":"109","hashOfConfig":"71"},{"size":2353,"mtime":1611742546467,"results":"110","hashOfConfig":"71"},{"size":3800,"mtime":1615021002741,"results":"111","hashOfConfig":"71"},{"size":1827,"mtime":1615018991945,"results":"112","hashOfConfig":"71"},{"size":1198,"mtime":1611570636778,"results":"113","hashOfConfig":"71"},{"size":852,"mtime":1616012744457,"results":"114","hashOfConfig":"71"},{"size":940,"mtime":1613325434610,"results":"115","hashOfConfig":"71"},{"size":1523,"mtime":1613333932692,"results":"116","hashOfConfig":"71"},{"size":941,"mtime":1613419787142,"results":"117","hashOfConfig":"71"},{"size":1707,"mtime":1613382154606,"results":"118","hashOfConfig":"71"},{"size":1076,"mtime":1613687014423,"results":"119","hashOfConfig":"71"},{"size":193,"mtime":1613508196528,"results":"120","hashOfConfig":"71"},{"size":9232,"mtime":1615236277028,"results":"121","hashOfConfig":"71"},{"size":463,"mtime":1614438473874,"results":"122","hashOfConfig":"71"},{"size":436,"mtime":1614580877847,"results":"123","hashOfConfig":"71"},{"size":2840,"mtime":1616231255337,"results":"124","hashOfConfig":"71"},{"size":3618,"mtime":1616228236208,"results":"125","hashOfConfig":"71"},{"size":187,"mtime":1615020561951,"results":"126","hashOfConfig":"71"},{"size":1272,"mtime":1615141703762,"results":"127","hashOfConfig":"71"},{"size":4833,"mtime":1615495370225,"results":"128","hashOfConfig":"71"},{"size":1253,"mtime":1616232336287,"results":"129","hashOfConfig":"71"},{"size":4067,"mtime":1615358223155,"results":"130","hashOfConfig":"71"},{"size":776,"mtime":1616232176118,"results":"131","hashOfConfig":"71"},{"size":685,"mtime":1615413998755,"results":"132","hashOfConfig":"71"},{"size":193,"mtime":1615404072661,"results":"133","hashOfConfig":"71"},{"size":5037,"mtime":1616231025983,"results":"134","hashOfConfig":"71"},{"size":251,"mtime":1616232245248,"results":"135","hashOfConfig":"71"},{"size":2579,"mtime":1616135299926,"results":"136","hashOfConfig":"71"},{"size":1202,"mtime":1616147910012,"results":"137","hashOfConfig":"71"},{"size":443,"mtime":1616231660643,"results":"138","hashOfConfig":"71"},{"size":586,"mtime":1616146437016,"results":"139","hashOfConfig":"71"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},"kn8bu3",{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"142"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"142"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"142"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"142"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"142"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"142"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"142"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"142"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"142"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"142"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"142"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"142"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"142"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"142"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"142"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"142"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"142"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"142"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"142"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"142"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"142"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"142"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"142"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"142"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"142"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"142"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"142"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"142"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"142"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},"D:\\MERN\\client\\src\\index.js",[],["308","309"],"D:\\MERN\\client\\src\\App.js",[],"D:\\MERN\\client\\src\\reportWebVitals.js",[],"D:\\MERN\\client\\src\\pages\\Home.js",["310","311"],"import React, { useEffect, useState } from 'react';\r\nimport { listProducts } from '../functions/productFunction';\r\nimport Jumbotron from '../components/cards/Jumbotron';\r\nimport NewArrivals from '../components/home/NewArrivals';\r\nimport BestSeller from '../components/home/BestSeller';\r\nimport CategoryListing from '../components/category/CategoryListing';\r\nimport SubCategoryListing from '../components/subCategory/subCategoryListing';\r\n\r\nconst Home = () => {\r\n  const [loading, setLoading]= useState(false);\r\n  const [products, setProducts]= useState([]);\r\n\r\n\r\n\r\n  useEffect(()=>{\r\n    loadproducts();\r\n  },[]);\r\n\r\n  \r\n  const loadproducts = () => {\r\n    \r\n    setLoading(true);\r\n    listProducts(6)\r\n    .then((res)=>{\r\n      setLoading(false);\r\n      setProducts(res.data);\r\n      console.log(\"products\", res.data)\r\n      console.log(\"products--\", products)\r\n    })\r\n    .catch((err)=>{\r\n      console.log(\"Error is\", err)\r\n    })\r\n\r\n  }\r\n  \r\n  // if(!user){\r\n  //   return <RedirectingTo />\r\n  //   //return <Redirect to=\"/login\" />\r\n  // }\r\n\r\n  return (\r\n    <div> \r\n      <div className=\"jumbotron\">\r\n        <Jumbotron/>\r\n      </div>\r\n      <h3 className=\"jumbotron mb-5 mt-5 text-center display-4\">\r\n        New Arrivals\r\n      </h3>\r\n      <NewArrivals />\r\n      <br/>\r\n      <br/>\r\n      <h3 className=\"jumbotron mb-5 mt-5 text-center display-4\">\r\n        Best Seller\r\n      </h3>\r\n      <BestSeller />\r\n      <CategoryListing />\r\n      <SubCategoryListing />\r\n        \r\n    \r\n    </div>\r\n  );\r\n\r\n  \r\n}\r\n \r\nexport default Home;","D:\\MERN\\client\\src\\pages\\auth\\Registration.js",["312","313"],"import React , {useState} from 'react';\r\nimport { auth } from './firebaseConfig';\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\nconst Registration = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  const handleSubmit = (e) =>{\r\n    \r\n    e.preventDefault();\r\n    var actionCodeSettings = {\r\n      url: `${process.env.REACT_APP_REGISTRATION_REDIRECT_URL}`,\r\n      handleCodeInApp: true,\r\n    }\r\n    \r\n    auth.sendSignInLinkToEmail(email, actionCodeSettings)\r\n    .then(() => {\r\n      toast.success(`Email is sent to ${email}. Please check your email for further procedure`);\r\n      window.localStorage.setItem('emailForSignIn', email);\r\n    })\r\n    .catch((error) => {\r\n      var errorCode = error.code;\r\n      var errorMessage = error.message;\r\n    // ...\r\n    });\r\n  }\r\n\r\n  const registrationform = () => <form onSubmit={handleSubmit}>\r\n    <input type=\"email\" className=\"form-control\" placeholder=\"Give Your Email\" autoFocus required value= {email} onChange={(e)=> setEmail(e.target.value)} />\r\n    <button type= \"submit\" className=\"btn btn-primary btn-sm\">Register</button>\r\n  </form>\r\n\r\n  return ( \r\n    <div className=\"container p-5\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 offset-md-3\">\r\n          \r\n          <h4>Register</h4>\r\n          {registrationform()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default Registration;","D:\\MERN\\client\\src\\pages\\auth\\Login.js",["314"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory , Redirect} from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { auth, googleAuthProvider } from './firebaseConfig';\r\nimport { toast } from 'react-toastify';\r\nimport { createOrUpdateUser } from '../../functions/authFunctions';\r\n\r\n\r\nconst Login = (props) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  let { user } = useSelector((state)=>({...state}));\r\n  \r\n\r\n\r\n  useEffect(()=>{\r\n    let intended = history.location.state;\r\n    if(intended){\r\n      return\r\n    }else{\r\n      if(user && user.token){\r\n        history.push('/');\r\n      }\r\n    }\r\n  },[user, history])\r\n\r\n  const roleBasedHistory=(res)=>{\r\n    let intended = history.location.state;\r\n\r\n    if(intended){\r\n      history.push(intended.from);\r\n    }else{\r\n      if(res.data.role==='admin'){\r\n        history.push('/admin/dashboard');\r\n      }else{\r\n        history.push('/user/history');\r\n      }\r\n    } \r\n  }\r\n\r\n  const handleSubmit =async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    try {\r\n      const result = await auth.signInWithEmailAndPassword(email, password);\r\n      const { user } = result;\r\n      const idTokenResult = await user.getIdTokenResult();\r\n      createOrUpdateUser(idTokenResult.token)\r\n        .then((res)=>{\r\n          dispatch({\r\n            type: \"LOGGED_IN_USER\",\r\n            payloads: {\r\n              email: res.data.email,\r\n              name: res.data.name,\r\n              role: res.data.role,\r\n              token: idTokenResult.token,\r\n              _id: res.data._id,\r\n            }\r\n          }\r\n        )\r\n        roleBasedHistory(res);\r\n        //history.push('/');\r\n        }).catch((error)=>{\r\n          console.log(\"token sent error\", error);\r\n        })\r\n\r\n      \r\n    } catch (error) {\r\n      setLoading(false);\r\n    \r\n    var errorMessage = error.message;\r\n    toast.error(errorMessage);\r\n    }\r\n  }\r\n\r\n  const googleLogin = async () =>{\r\n    auth.signInWithPopup(googleAuthProvider).then\r\n    (async (result)=>{\r\n      const { user } = result;\r\n      const idTokenResult = await user.getIdTokenResult();\r\n      \r\n      createOrUpdateUser(idTokenResult.token)\r\n        .then((res)=>{\r\n          dispatch({\r\n            type: \"LOGGED_IN_USER\",\r\n            payloads: {\r\n              email: res.data.email,\r\n              name: res.data.name,\r\n              role: res.data.role,\r\n              token: idTokenResult.token,\r\n              _id: res.data._id,\r\n            }\r\n          }\r\n        )\r\n        history.push('/');\r\n        }).catch((error)=>{\r\n          console.log(\"token sent error\", error);\r\n        })\r\n    }\r\n  ).catch ((error)=>{\r\n  setLoading(false);\r\n  \r\n  var errorMessage = error.message;\r\n  toast.error(errorMessage);\r\n  }\r\n  )\r\n}\r\n\r\n  return ( \r\n    <div className=\"container\">\r\n      <h3 className=\"left-align\">Login</h3>\r\n      <form onSubmit={handleSubmit}>\r\n      <div className=\"form-group\">\r\n        <input type=\"text\" className=\"form-control\" value={email} placeholder=\"Your Email\" onChange={(e)=> setEmail(e.target.value)} />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <input type=\"password\" className=\"form-control\" value ={password} placeholder=\"Your Password\" onChange={(e)=> setPassword(e.target.value)} /> \r\n      </div>\r\n      <div className=\"form-group\">\r\n        <button className=\"btn btn-primary\" type=\"submit\" >Login</button>\r\n      </div>\r\n      </form>\r\n      <button onClick={googleLogin} className=\"btn btn-primary white\" type=\"submit\" >Sine In With Google</button>\r\n      { loading ? (<div className=\"text-danger\">Loading...</div>) : null}\r\n    </div>\r\n  );\r\n  \r\n}\r\n\r\n\r\n \r\nexport default Login;","D:\\MERN\\client\\src\\components\\Navbar.js",[],"D:\\MERN\\client\\src\\pages\\auth\\firebaseConfig.js",[],"D:\\MERN\\client\\src\\pages\\auth\\RegistrationComplete.js",[],"D:\\MERN\\client\\src\\reducers\\rootReducer.js",[],"D:\\MERN\\client\\src\\reducers\\userReducer.js",[],"D:\\MERN\\client\\src\\functions\\authFunctions.js",[],"D:\\MERN\\client\\src\\pages\\users\\History.js",["315"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport UserNav from '../../components/UserNav';\r\nimport { getOrders } from '../../functions/userFunctions';\r\nimport { CheckCircleOutlined , CloseOutlined  } from '@ant-design/icons';\r\nimport { PDFDownloadLink } from '@react-pdf/renderer';\r\nimport Invoice from '../../components/order/Invoice';\r\nimport PaymentInfo from '../../components/order/PaymentInfo';\r\n\r\nconst History = () => {\r\n  const [orders, setOrders] = useState([]);\r\n\r\n  const { user } = useSelector((state)=>({...state}));\r\n  \r\n  useEffect(()=>{\r\n    getOrders(user.token)\r\n      .then((res)=>{\r\n          setOrders(res.data);\r\n          console.log(\"Received order data\", res.data);\r\n      }).catch((err)=>{\r\n        console.log(\"Order Fetch Failed\", err);\r\n      })\r\n\r\n  },[])\r\n\r\n  \r\n\r\n\r\n  const showOrderInTable = (order) => (\r\n    \r\n    <table className=\"table table-bordered\">\r\n      <thead className=\"thead-light\">\r\n        <tr>\r\n          <th scope=\"col\">Title</th>\r\n          <th scope=\"col\">Price</th>\r\n          <th scope=\"col\">Quantity</th>\r\n          <th scope=\"col\">Color</th>\r\n          <th scope=\"col\">Shipping</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {order.products.map((p,i)=>(\r\n          <tr key={i}>\r\n            <td><b>{p.product.title}</b></td>\r\n            <td>${p.product.price}</td>\r\n            <td>{p.count}</td>\r\n            <td>{p.color}</td>\r\n            <td>{p.product.shipping ? <CheckCircleOutlined className=\"text-info\"/>:<CloseOutlined className=\"text-danger\" />}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  )\r\n\r\n  \r\n  \r\n  const pdfInvoice = (order) => (\r\n    <PDFDownloadLink\r\n      document={<Invoice order={order}/>}\r\n      fileName=\"invoice.pdf\"\r\n    >\r\n      Download\r\n    </PDFDownloadLink> \r\n  )\r\n\r\n  const showEachOrders = () => (\r\n    orders.map((order,i)=>(\r\n      <div key={i} className=\"m-5 p-3 card\">\r\n        <h6>Order Number: <span className=\"text-info\">{order._id}</span></h6>\r\n        <PaymentInfo order={order}/>\r\n        {showOrderInTable(order)}\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            {pdfInvoice(order)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    ))\r\n  )\r\n\r\n  return ( \r\n    <div className=\"container-fluid\" >\r\n      <div className=\"row\">\r\n        <div className=\"col-md-2 float-left\">\r\n          <UserNav />\r\n        </div>\r\n        <div className=\"col-md-8 text-center\">\r\n          <h4>{orders.length >0 ? \"Purchased Orders\": \"No Purchased Orders\" }</h4>\r\n          {showEachOrders()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n   );\r\n}\r\n \r\nexport default History;","D:\\MERN\\client\\src\\components\\routes\\UserProtectedRoutes.js",[],"D:\\MERN\\client\\src\\components\\routes\\RedirectingTo.js",["316"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory }  from 'react-router-dom';\r\n\r\n\r\n\r\nconst RedirectingTo = () => {\r\n  const history = useHistory();\r\n  const [count, setCount] = useState(5);\r\n\r\n  useEffect(()=>{\r\n    const interval = setInterval(()=>{\r\n      setCount((curretCount)=> --curretCount);\r\n    },1000)\r\n    if(count === 0){\r\n      history.push('/login');\r\n    };\r\n    return ()=> clearInterval(interval);\r\n  }, [count]);\r\n\r\n  return ( \r\n    <div className=\"container p-5 text-center\">Redirecting in {count} seconds</div>\r\n   );\r\n}\r\n \r\nexport default RedirectingTo;","D:\\MERN\\client\\src\\components\\UserNav.js",[],"D:\\MERN\\client\\src\\pages\\users\\Password.js",[],"D:\\MERN\\client\\src\\pages\\users\\Wishlist.js",[],"D:\\MERN\\client\\src\\components\\routes\\AdminProtectedRoutes.js",[],"D:\\MERN\\client\\src\\pages\\admin\\AdminDashboard.js",["317"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport AdminNav from '../../components/AdminNav'\r\nimport OrderBoard from '../../components/order/OrderBoard';\r\nimport { getAllOrders, updateOrderStatus } from '../../functions/adminFunction';\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\n\r\nconst AdminDashboard = () => {\r\n  const [ allOrders, setAllOrders ] = useState([]);\r\n  const { user } = useSelector((state)=>({...state})); \r\n\r\n  useEffect(()=>{\r\n    loadAllOrders();\r\n  },[])\r\n\r\n  const loadAllOrders = () => {\r\n    getAllOrders(user.token)\r\n      .then((res)=>{\r\n        setAllOrders(res.data);\r\n      }).catch((err)=>{\r\n        console.log(\"All Orders fetch Error\", err);\r\n      })\r\n  }\r\n\r\n  const handleStatusChange = (orderId, orderStatus) => {\r\n    console.log(\"Ordr change\", orderStatus);\r\n    updateOrderStatus(orderId, orderStatus, user.token)\r\n      .then((res)=>{\r\n        toast.success(\"Status Updated successfully\");\r\n        loadAllOrders();\r\n      })\r\n  }\r\n\r\n  return ( \r\n    <div className=\"container-fluid\">\r\n      \r\n      <div className=\"row\">\r\n        <div className=\"col-md-2\">\r\n          <AdminNav />\r\n        </div>\r\n        <div className=\"col\">\r\n          <OrderBoard allOrders={allOrders} handleStatusChange={handleStatusChange}/>\r\n        </div>\r\n          \r\n      </div>\r\n\r\n    </div>\r\n   );\r\n}\r\n \r\nexport default AdminDashboard;","D:\\MERN\\client\\src\\functions\\categoryFunctions.js",[],"D:\\MERN\\client\\src\\components\\AdminNav.js",[],"D:\\MERN\\client\\src\\pages\\admin\\categories\\CreateCategory.js",["318","319"],"import React, {useState, useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport AdminNav from '../../../components/AdminNav';\r\nimport { creatCategory, deleteCategory, getCategories, updateCategory } from '../../../functions/categoryFunctions'\r\nimport { useSelector } from 'react-redux'\r\nimport { toast } from 'react-toastify'\r\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport LocalSearch from '../../../components/forms/LocalSearch';\r\n\r\n\r\n\r\nconst CreateCategory = () => {\r\n  const { user } = useSelector(state=>({...state}))\r\n  const [ name, setName] = useState('');\r\n  const [ categories, setCategories] = useState([]);\r\n  const [ loading, setLoading] = useState(false);\r\n  const [ keyword, setKeyword ] = useState('');\r\n\r\n\r\n  useEffect(()=>{\r\n    //console.log(\"this is user\",user);\r\n    loadCategories();\r\n  },[])\r\n\r\n  const loadCategories = () =>{\r\n    getCategories()\r\n      .then((res)=>{\r\n        setCategories(res.data);\r\n      })\r\n  }\r\n\r\n  const handleDelete = async(slug)=>{\r\n    setLoading(true);\r\n    if(window.confirm(\"Delete?\")){\r\n      deleteCategory(slug,user.token)\r\n        .then((res)=>{\r\n          toast.error(`${res.data.name} is deleted`);\r\n          loadCategories();\r\n        }).catch((err)=>{\r\n          toast.error(err.response.data);\r\n          //console.log(err.data);\r\n          setLoading(false);\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (e) =>{\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    creatCategory(name, user.token)\r\n      .then((res)=>{\r\n        toast.success(`${res.data.name} category is created`);\r\n        setLoading(false);\r\n        setName('');\r\n        loadCategories();\r\n      }\r\n    ).catch((err)=>{\r\n      toast.error(err.response.data);\r\n      console.log(err.data);\r\n      setLoading(false);\r\n    })\r\n  }\r\n\r\n  const categoryForm = ()=>(\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"form-group \">\r\n        <label>Name:</label>\r\n        <input \r\n          type=\"text\"\r\n          className=\"form-control\" \r\n          onChange={(e)=>setName(e.target.value)}\r\n          placeholder=\"Add a category\"\r\n          value={name}\r\n          autoFocus\r\n          required\r\n        />\r\n        <br/>\r\n        <button type=\"submit\" className=\"btn btn-outline-primary\"  >Save</button>\r\n      </div>\r\n    </form>\r\n  )\r\n\r\n\r\n  return ( \r\n    <div className=\"container-fluid\">\r\n       <div className=\"row\">\r\n        <div className=\"col-md-2\">\r\n          <nav className=\"float-left\">\r\n            <AdminNav />\r\n          </nav>\r\n        </div>\r\n      \r\n      <div className=\"col\">\r\n        <h3>Add a Category</h3>\r\n        {categoryForm()}\r\n        \r\n        <LocalSearch keyword={keyword} setKeyword={setKeyword}/>\r\n        \r\n        { categories.filter(c=>c.name.toLowerCase().includes(keyword)).map((category)=>{\r\n          return (\r\n            <div className=\"alert alert-primary text-left\" key={category._id}>{category.name}\r\n              <div className=\"float-right\">\r\n                <span className=\"btn btn-sm\"><Link to={`/admin/category/${category.slug}`}><EditOutlined className=\"text-danger\"/></Link></span>\r\n                <span onClick={()=>handleDelete(category.slug)} className=\"btn btn-sm\"><DeleteOutlined className=\"text-danger\"/></span>\r\n              </div>\r\n            </div>) \r\n        })}\r\n      </div>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\nexport default CreateCategory;","D:\\MERN\\client\\src\\pages\\admin\\categories\\UpdateCategory.js",["320","321","322","323","324"],"import React,{useState, useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport AdminNav from '../../../components/AdminNav';\r\nimport { updateCategory, getCategory } from '../../../functions/categoryFunctions'\r\nimport { useSelector } from 'react-redux'\r\nimport { toast } from 'react-toastify'\r\n\r\n\r\n\r\nconst UpdateCategory = ({history,match}) => {\r\n  const { user } = useSelector(state=>({...state}))\r\n  const [ name, setName] = useState('');\r\n  const [ category, setCategory] = useState('');\r\n  const [ loading, setLoading] = useState(false);\r\n\r\n  useEffect(()=>{\r\n    //console.log(\"this is match\",match);\r\n    loadCategory();\r\n    //console.log(\"this is category\", category);\r\n  },[])\r\n\r\n  \r\n  const loadCategory = () =>{\r\n    getCategory(match.params.slug)\r\n      .then((res)=>{\r\n        setCategory(res.data.category.name);\r\n        \r\n      })\r\n  }\r\n\r\n  const handleSubmit = (e) =>{\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    updateCategory(match.params.slug, category, user.token)\r\n      .then((res)=>{\r\n        toast.success(`Category updated to ${res.data.name}`)\r\n        setLoading(false);\r\n        history.push('/admin/category');\r\n      })\r\n      .catch((err)=>{\r\n        toast.error(err.response.data);\r\n        setLoading(false);\r\n      })\r\n  }\r\n  const editForm = ()=>(\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"form-group \">\r\n        \r\n        <input \r\n          type=\"text\"\r\n          className=\"form-control\" \r\n          value={category}\r\n          onChange={(e)=>setCategory(e.target.value)}\r\n          autoFocus\r\n          required\r\n        />\r\n        <br/>\r\n        <button type=\"submit\" className=\"btn btn-outline-primary\">Update</button>\r\n      </div>\r\n    </form>\r\n  )\r\n\r\n  return ( \r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-2\">\r\n          <nav className=\"float-left\">\r\n            <AdminNav />\r\n          </nav>\r\n        </div>\r\n      \r\n      <div className=\"col\">\r\n        <h3>Update the Category</h3>\r\n        {editForm()}\r\n      </div>\r\n    </div>\r\n  </div>\r\n   );\r\n}\r\n \r\nexport default UpdateCategory;","D:\\MERN\\client\\src\\components\\forms\\LocalSearch.js",[],"D:\\MERN\\client\\src\\pages\\admin\\sub\\CreateSub.js",["325"],"import React, {useState, useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport AdminNav from '../../../components/AdminNav';\r\nimport { getCategories } from '../../../functions/categoryFunctions'\r\nimport { useSelector } from 'react-redux'\r\nimport { toast } from 'react-toastify'\r\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport LocalSearch from '../../../components/forms/LocalSearch';\r\nimport { creatsub, deletesub, getSubs } from '../../../functions/subFunctions';\r\n\r\n\r\n\r\nconst CreateSub = () => {\r\n  const { user } = useSelector(state=>({...state}))\r\n  const [ name, setName] = useState('');\r\n  const [ categories, setCategories] = useState([]);\r\n  const [ subs, setSubs] = useState([]);\r\n  const [ parent, setParent] = useState(\"\");\r\n  const [ loading, setLoading] = useState(false);\r\n  const [ keyword, setKeyword ] = useState('');\r\n\r\n\r\n  useEffect(()=>{\r\n    //console.log(\"this is user\",user);\r\n    loadSubs();\r\n    loadCategories();\r\n  },[])\r\n\r\n  const loadSubs = () =>{\r\n    getSubs()\r\n      .then((res)=>{\r\n        setSubs(res.data);\r\n      })\r\n  }\r\n\r\n  const loadCategories = () =>{\r\n    getCategories()\r\n      .then((res)=>{\r\n        setCategories(res.data);\r\n      })\r\n  }\r\n\r\n  const handleDelete = async(slug)=>{\r\n    setLoading(true);\r\n    if(window.confirm(\"Delete?\")){\r\n      deletesub(slug,user.token)\r\n        .then((res)=>{\r\n          toast.error(`${res.data.name} is deleted`);\r\n          loadSubs();\r\n        }).catch((err)=>{\r\n          toast.error(err.response.data);\r\n          //console.log(err.data);\r\n          setLoading(false);\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (e) =>{\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    creatsub({name, parent}, user.token)\r\n      .then((res)=>{\r\n        toast.success(`${res.data.name} sub is created`);\r\n        setLoading(false);\r\n        setName('');\r\n        loadSubs();\r\n      }\r\n    ).catch((err)=>{\r\n      toast.error(err.response.data);\r\n      console.log(err.data);\r\n      setLoading(false);\r\n    })\r\n  }\r\n\r\n  const categoryForm = ()=>(\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"form-group \">\r\n        <label>Sub Name:</label>\r\n        <input \r\n          type=\"text\"\r\n          className=\"form-control\" \r\n          onChange={(e)=>setName(e.target.value)}\r\n          placeholder=\"Add a Sub\"\r\n          value={name}\r\n          autoFocus\r\n          required\r\n        />\r\n        <br/>\r\n        <div className=\"form-group col-lg-4 inline-block\">\r\n          <label>Parent</label>\r\n          <select className=\"form-control\" onChange={e=>setParent(e.target.value)}>\r\n              <option>--Select The Category</option>\r\n            { categories.length>1 && categories.map((category)=>(\r\n              <option  key={category._id} value={category._id}>{category.name}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <br/>\r\n        <button type=\"submit\" className=\"btn btn-outline-primary float-lg-left mb-3\"  >Save</button>\r\n        <br/>\r\n      </div>\r\n    </form>\r\n  )\r\n\r\n\r\n  return ( \r\n    <div className=\"container-fluid\">\r\n       <div className=\"row\">\r\n        <div className=\"col-md-2\">\r\n          <nav className=\"float-left\">\r\n            <AdminNav />\r\n          </nav>\r\n        </div>\r\n      \r\n      <div className=\"col\">\r\n        <h3>Add a Subcategory</h3>\r\n        {categoryForm()}\r\n        \r\n        <LocalSearch  keyword={keyword} setKeyword={setKeyword}/>\r\n        \r\n        { subs.filter(c=>c.name.toLowerCase().includes(keyword)).map((sub)=>{\r\n          return (\r\n            <div className=\"alert alert-primary text-left\" key={sub._id}>{sub.name}\r\n              <div className=\"float-right\">\r\n                <span className=\"btn btn-sm\"><Link to={`/admin/subcategory/${sub.slug}`}><EditOutlined className=\"text-danger\"/></Link></span>\r\n                <span onClick={()=>handleDelete(sub.slug)} className=\"btn btn-sm\"><DeleteOutlined className=\"text-danger\"/></span>\r\n              </div>\r\n            </div>) \r\n        })}\r\n      </div>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\nexport default CreateSub;","D:\\MERN\\client\\src\\functions\\subFunctions.js",[],"D:\\MERN\\client\\src\\pages\\admin\\sub\\UpdateSub.js",["326","327","328","329","330"],"import React,{useState, useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport AdminNav from '../../../components/AdminNav';\r\nimport { updateCategory, getCategory, getCategories } from '../../../functions/categoryFunctions'\r\nimport { useSelector } from 'react-redux'\r\nimport { toast } from 'react-toastify'\r\nimport { getsub, updatesub } from '../../../functions/subFunctions';\r\n\r\n\r\n\r\nconst UpdateSub = ({history,match}) => {\r\n  const { user } = useSelector(state=>({...state}))\r\n  const [ name, setName] = useState('');\r\n  const [ category, setCategory] = useState('');\r\n  const [ categories, setCategories] = useState([]);\r\n  const [ loading, setLoading] = useState(false);\r\n  const [ parent, setParent] = useState(\"\");\r\n\r\n  useEffect(()=>{\r\n    //console.log(\"this is match\",match);\r\n    loadSub();\r\n    loadCategories();\r\n    //console.log(\"this is category\", category);\r\n  },[])\r\n\r\n  \r\n  const loadSub = () =>{\r\n    getsub(match.params.slug)\r\n      .then((res)=>{\r\n        setName(res.data.sub.name);\r\n        setParent(res.data.sub.parent);\r\n        setCategory(res.data);\r\n        console.log(\"this is category\", category);\r\n      })\r\n  }\r\n\r\n  \r\n\r\n  const loadCategories = () =>{\r\n    getCategories()\r\n      .then((res)=>{\r\n        setCategories(res.data);\r\n        console.log(\"this is category\", category);\r\n      })\r\n  }\r\n\r\n  \r\n\r\n  const handleSubmit = (e) =>{\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    updatesub(match.params.slug, {name, parent}, user.token)\r\n      .then((res)=>{\r\n        toast.success(`Sub updated to ${res.data.name}`)\r\n        setLoading(false);\r\n        history.push('/admin/subcategory');\r\n      })\r\n      .catch((err)=>{\r\n        toast.error(err.response.data);\r\n        setLoading(false);\r\n      })\r\n  }\r\n  const editForm = ()=>(\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"form-group \">\r\n        \r\n        <input \r\n          type=\"text\"\r\n          className=\"form-control\" \r\n          value={name}\r\n          onChange={(e)=>setName(e.target.value)}\r\n          autoFocus\r\n          required\r\n        />\r\n        <br/>\r\n        \r\n        <div className=\"form-group col-lg-4\">\r\n          <label>Parent</label>\r\n          <select className=\"form-control\" onChange={e=>setParent(e.target.value)}>\r\n              {/* <option value={selected._id}>{selected.name}</option> */}\r\n              \r\n            { categories.length>1 && categories.map((category)=>(\r\n              <option key={category._id} value={category._id} selected={category._id===parent}>{category.name}</option>\r\n            ))}\r\n          </select>\r\n          \r\n        </div>\r\n        \r\n        <button type=\"submit\" className=\"btn btn-outline-primary float-left\">Update</button>\r\n      </div>\r\n    </form>\r\n  )\r\n\r\n  return ( \r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-2\">\r\n          <nav className=\"float-left\">\r\n            <AdminNav />\r\n          </nav>\r\n        </div>\r\n      \r\n      <div className=\"col\">\r\n        <h3>Update the subcategory</h3>\r\n        {editForm()}\r\n      </div>\r\n    </div>\r\n  </div>\r\n   );\r\n}\r\n \r\nexport default UpdateSub;","D:\\MERN\\client\\src\\pages\\product\\CreateProduct.js",["331","332","333","334","335"],"import React,{ useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport AdminNav from '../../components/AdminNav'\r\nimport { createProduct } from '../../functions/productFunction';\r\nimport { toast } from 'react-toastify'\r\nimport { getCategories, getOptionSubs } from '../../functions/categoryFunctions';\r\nimport { getSubs } from '../../functions/subFunctions';\r\nimport { Select } from 'antd'\r\nimport FileUpload from '../../components/forms/FileUpload';\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst initialStates = {\r\n  title:'Mac Book 120',\r\n  description:'Best Product Best Product Best ProductBest Product Best Product Best Product Best Product',\r\n  price: '4500',\r\n  categories:[],\r\n  category: '5ff8da08bf09aa04146a72e0',\r\n  subs: [],\r\n  quantity: '20',\r\n  images: [],\r\n  colors:  [\"Black\",\"Red\",\"White\",\"Blue\",\"Silver\"],\r\n  brands: [\"Apple\",\"Samsung\",\"ASUS\",\"MSI\",\"Lenovo\"],\r\n  color: '',\r\n  brand: '',\r\n}\r\n\r\nconst CreateProduct = () => {\r\n\r\n  const { user } = useSelector((state)=>({...state}))\r\n\r\n  const [ values, setValues ] = useState(initialStates);\r\n  const [ loading , setLoading ] = useState(false);\r\n  const { title, description, price, categories, category, subs, quantity,images,colors, color, brands, brand} = values;\r\n  const [ subOptions, setSubOptions ] = useState([]);\r\n  const [showSubs, setShowSubs] = useState(false);\r\n\r\n  useEffect(()=>{\r\n    //console.log(\"this is user\",user);\r\n    loadSubs();\r\n    loadCategories();\r\n  },[])\r\n\r\n  const loadSubs = () =>{\r\n    getSubs()\r\n      .then((res)=>{\r\n        setValues({...values, subs: res.data});\r\n      })\r\n  }\r\n\r\n  const loadCategories = () =>{\r\n    getCategories()\r\n      .then((res)=>{\r\n        setValues({...values, categories: res.data});\r\n      })\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    createProduct(values, user.token)\r\n      .then((res)=>{\r\n        if(window.confirm(`${res.data.title} created`)){\r\n          window.location.reload();\r\n        };\r\n        console.log(res.data);\r\n      })\r\n      .catch((err)=>{\r\n        toast.error(err.response.data.err);\r\n        console.log(\"the eroor\",err.response);\r\n      })\r\n  }\r\n\r\n  const handleSubOptions = (e) => {\r\n    e.preventDefault();\r\n    \r\n    getOptionSubs(e.target.value)\r\n      .then((res)=>{\r\n          console.log(\"Trigered\", e.target.value);\r\n          setSubOptions(res.data);\r\n          setValues({...values,subs:[], [e.target.name]: e.target.value})\r\n          setShowSubs(true);\r\n      })\r\n      \r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    setValues({...values, [e.target.name]: e.target.value})\r\n  }\r\n\r\n  return ( \r\n    <div className=\"container-fluid \">\r\n      <div className=\"row \">\r\n        <div className=\"col-md-2\">\r\n          <AdminNav />\r\n        </div>\r\n        <div className=\"col-md-10\">\r\n          \r\n          <h3>Product Create</h3>\r\n          \r\n          <br/>\r\n          \r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n              <label className=\"float-left \">Title: </label>\r\n              <input \r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"title\"\r\n                value={title}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"float-left \">Description: </label>\r\n              <input \r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"description\"\r\n                value={description}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"float-left \">Price: </label>\r\n              <input \r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                name=\"price\"\r\n                value={price}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <FileUpload values={values} setValues={setValues} loading={loading} setLoading={setLoading}/>\r\n            </div>\r\n              <br/>\r\n              <br/>\r\n              <br/>\r\n             <div className=\"form-group\">\r\n              <label className=\"float-left \">Categoy: </label>\r\n              <select className=\"form-control\"\r\n                name=\"category\"\r\n                onChange={handleSubOptions}>\r\n                <option >--Select Category--</option>\r\n                { categories.length>1 && categories.map((category)=>(\r\n                <option  key={category._id} value={category._id}>{category.name}</option>\r\n            ))}\r\n              </select>\r\n            </div> \r\n            \r\n            {showSubs && <div className=\"form-group\">\r\n              <label className=\"float-left \">Sub category: </label>\r\n              <Select className=\"form-control\"\r\n                mode=\"multiple\"\r\n                value={subs}\r\n                placeholder=\"Please Select\"\r\n                onChange={value=>setValues({...values, subs:value})}>\r\n                \r\n                { subOptions.length>0 && subOptions.map((sub)=>(\r\n                <Option  key={sub._id} value={sub._id}>{sub.name}</Option>\r\n            ))}\r\n              </Select>\r\n            </div> }\r\n            <div className=\"form-group\">\r\n              <label className=\"float-left \">Quantity: </label>\r\n              <input \r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                name=\"quantity\"\r\n                value={quantity}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"float-left \">Shipping: </label>\r\n              <select className=\"form-control\"\r\n                name=\"shipping\"\r\n                onChange={handleChange}>\r\n                <option >--Select Shipping--</option>\r\n                <option value=\"Yes\">Yes</option>\r\n                <option value=\"No\">No</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"float-left \">Color: </label>\r\n              <select className=\"form-control\"\r\n                name=\"color\"\r\n                onChange={handleChange}>\r\n                <option >--Select Color--</option>\r\n                { colors.map((c)=>(\r\n                  <option value={c}>{c}</option>\r\n                ))}               \r\n              </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"float-left \">Brand: </label>\r\n              <select className=\"form-control\"\r\n                name=\"brand\"\r\n                onChange={handleChange}>\r\n                <option >--Select Brand--</option>\r\n                { brands.map((b)=>(\r\n                  <option value={b}>{b}</option>\r\n                ))}               \r\n              </select>\r\n            </div>\r\n            <button disabled={loading} type=\"submit\" className=\"btn btn-outline-primary float-lg-left mb-3\"> Save </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n   );\r\n}\r\n \r\nexport default CreateProduct;","D:\\MERN\\client\\src\\functions\\productFunction.js",[],"D:\\MERN\\client\\src\\pages\\product\\ListProducts.js",["336"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux'\r\nimport AdminNav from '../../components/AdminNav'\r\nimport AdminProductCards from '../../components/cards/AdminProductCards';\r\nimport { listProducts, removeProduct } from '../../functions/productFunction';\r\nimport { toast } from 'react-toastify'\r\nimport CreateProduct from './CreateProduct';\r\n\r\n\r\nconst ListProducts = () => {\r\n  const { user } = useSelector((state)=>({...state}))\r\n  const [ products, setProducts] = useState([]);\r\n  const [ loading, setLoading ] = useState(false);\r\n\r\n  useEffect(() => {\r\n    loadProducts();\r\n  },[])\r\n\r\n  const loadProducts = () => {\r\n    setLoading(true);\r\n    listProducts()\r\n      .then((res)=>{\r\n        setLoading(false)\r\n        setProducts(res.data)\r\n      })\r\n      .catch((err)=>{\r\n        setLoading(false);\r\n        console.log(err);\r\n      })\r\n    \r\n  }\r\n\r\n  const handleRemove = (slug) => {\r\n    if(window.confirm(\"Do you want to delete\")){\r\n      removeProduct(slug, user.token)\r\n      .then((res)=>{\r\n        toast.error(`${res.data.title} is removed`);\r\n        loadProducts();\r\n      })\r\n      .catch((err)=>{\r\n        toast.error(err.response.err);\r\n      })\r\n    }; \r\n  }\r\n\r\n\r\n  return ( \r\n    <div className=\"container-fluid\">\r\n      \r\n      <div className=\"row\">\r\n        <div className=\"col-md-2\">\r\n          <AdminNav />\r\n        </div>\r\n      \r\n        \r\n        <div className=\"col\">\r\n          <div className=\"row pt-2\">\r\n          { loading ? (<h3 className=\"text-danger\">Loading Products..</h3>) : (<h3 className=\"\">All Products</h3>) }\r\n           <div className=\"col\"><Link to=\"/admin/product\"><button className=\"btn btn-outline-primary float-right\">Add New Product</button></Link></div>\r\n          </div>\r\n           \r\n          <div className=\"row\">\r\n            {products && products.map((product)=>{\r\n              return(\r\n                <div className=\"col-lg-4 p-2\" key={product._id}>\r\n                  <AdminProductCards product={product} handleRemove={handleRemove} />\r\n                </div>\r\n              )\r\n            })}\r\n\r\n          </div>\r\n          \r\n        </div>\r\n          \r\n        \r\n      \r\n      </div>\r\n    </div>\r\n   );\r\n}\r\n \r\nexport default ListProducts;","D:\\MERN\\client\\src\\components\\forms\\FileUpload.js",["337"],"import React, {useState} from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Resizer from 'react-image-file-resizer';\r\nimport axios from 'axios';\r\nimport {Avatar, Badge } from 'antd'\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\nconst FileUpload = ({values, setValues,loading, setLoading}) => {\r\n\r\n  const { user } = useSelector((state)=>({...state}))\r\n  \r\n\r\n  const handleImageUpload = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    let files = e.target.files;\r\n    let addedImages = values.images;\r\n    if(files){\r\n      for (let i = 0; i < files.length; i++) {\r\n        \r\n        Resizer.imageFileResizer(files[i], 520, 520, 'JPEG', 50, 0,\r\n          (uri) => {\r\n            console.log(uri);\r\n            axios.post(`${process.env.REACT_APP_API}/uploadimages`, {image: uri},{\r\n              headers:{\r\n                authToken:user.token,\r\n              }\r\n            })\r\n              .then((res)=>{\r\n                console.log(\"THis is resposes\", res.data);\r\n                addedImages.push(res.data);\r\n                setValues({ ...values , images: addedImages });\r\n                setLoading(false);\r\n              })\r\n              .catch((err)=>{\r\n                console.log(err.message);\r\n              })\r\n            },\r\n        'base64'\r\n        );   \r\n      }\r\n    }\r\n  }\r\n\r\n  const handleImageRemove = (public_id) => {\r\n    //console.log(public_id);\r\n    //setLoading(true);\r\n    axios.post(`${process.env.REACT_APP_API}/removeimage`,{public_id},{\r\n      headers:{\r\n        authToken: user.token,\r\n      }\r\n    })\r\n      .then((res)=>{\r\n        //setLoading(false);\r\n        //console.log(\"triggered\", res);\r\n        let { images } = values;\r\n        let filteredImages = images.filter((image)=>{\r\n          return image.public_id !== public_id;\r\n        })\r\n        setValues({...values, images: filteredImages});\r\n\r\n      })\r\n      .catch((err)=>{\r\n        console.log(\"Couldn't remove the image\", err);\r\n      })\r\n  }\r\n\r\n  return ( \r\n\r\n    <>\r\n    \r\n      <div className=\"row\">\r\n        \r\n        { loading ? (<div><LoadingOutlined style={{height:\"50px\", width:\"50px\"}} className=\"text-danger\"/></div>): (values.images && values.images.map((image)=>(\r\n          <Badge \r\n            count=\"x\" \r\n            key={image.public_id}\r\n            style={ {cursor:\"pointer\"}}\r\n            onClick={()=>handleImageRemove(image.public_id)}\r\n            >\r\n              <Avatar \r\n                key={image.public_id} \r\n                src={image.url} \r\n                size={100} \r\n                shape=\"square\"\r\n                className=\"ml-2\"\r\n              />\r\n          </Badge>\r\n          \r\n        )))\r\n          \r\n          }\r\n\r\n      </div>\r\n\r\n      <div className=\"mt-3\">\r\n      \r\n        <label className=\"btn btn-outline-primary float-left\"> Upload Images\r\n          <input \r\n            type=\"file\"\r\n            multiple\r\n            hidden\r\n            accept=\"imeges/*\"\r\n            onChange={handleImageUpload}\r\n          />\r\n        </label>\r\n      </div>\r\n    </>\r\n    \r\n   );\r\n}\r\n \r\nexport default FileUpload;","D:\\MERN\\client\\src\\components\\cards\\AdminProductCards.js",[],"D:\\MERN\\client\\src\\pages\\product\\UpdateProduct.js",["338","339","340","341","342","343","344","345"],"import React,{ useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport AdminNav from '../../components/AdminNav'\r\nimport { createProduct, getProduct, updateProduct } from '../../functions/productFunction';\r\nimport { toast } from 'react-toastify'\r\nimport { getCategories, getOptionSubs } from '../../functions/categoryFunctions';\r\nimport { getSubs } from '../../functions/subFunctions';\r\nimport { Select } from 'antd'\r\nimport FileUpload from '../../components/forms/FileUpload';\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst initialStates = {\r\n  title:'',\r\n  description:'',\r\n  price: '',\r\n  shipping: '',\r\n  category: '',\r\n  subs: [],\r\n  quantity: '',\r\n  images: [],\r\n  colors:  [\"Black\",\"Red\",\"White\",\"Blue\",\"Silver\"],\r\n  brands: [\"Apple\",\"Samsung\",\"ASUS\",\"MSI\",\"Lenovo\"],\r\n  color: '',\r\n  brand: '',\r\n}\r\n\r\nconst UpdateProduct = ({match, history}) => {\r\n\r\n  const { user } = useSelector((state)=>({...state}))\r\n\r\n  const [ values, setValues ] = useState(initialStates);\r\n  const [ loading , setLoading ] = useState(false);\r\n  const { title, description, price, category, subs, shipping,quantity,images,colors, color, brands, brand} = values;\r\n  const [ subArray, setSubArray ] = useState([]);\r\n  const [currentCategory, setCurrentCategory]= useState();\r\n  const [currentSubs, setCurrentSubs] = useState([]);\r\n  const [ categories, setCategories] = useState([]);\r\n  const [ subOptions, setSubOptions ] = useState([]);\r\n  \r\n  const { slug } = match.params;\r\n\r\n  useEffect(()=>{\r\n    //console.log(\"this is user\",user);\r\n    loadProduct();\r\n    loadCategories();\r\n  },[])\r\n\r\n  const loadProduct = () => {\r\n    setLoading(true);\r\n    getProduct(slug)\r\n    .then((res)=>{\r\n      setValues({...values, ...res.data});\r\n      setCurrentCategory(res.data.category);\r\n      //let currentSubs = res.data.subs;\r\n      let currentSubs =res.data.subs;\r\n      console.log(\"data \",res.data.subs);\r\n      console.log(\"crnt subs\",currentSubs);\r\n      let sArray = [];\r\n      \r\n      currentSubs.map((s)=>(\r\n        sArray.push(s._id)\r\n        ))\r\n        \r\n      \r\n      setSubArray((prev)=>sArray);\r\n      console.log(subArray);\r\n      getOptionSubs(res.data.category._id)\r\n      .then((res)=>{\r\n           setLoading(false);\r\n           setSubOptions(res.data);\r\n         }  \r\n      ) \r\n\r\n    })\r\n  }\r\n\r\n\r\n\r\n  const loadCategories = () =>{\r\n    setLoading(true);\r\n    getCategories()\r\n      .then((res)=>{\r\n        //setLoading(false);\r\n        console.log(\"this is Load Category\");\r\n        setCategories(res.data);\r\n      })\r\n  }\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setValues({...values, subs: subArray});\r\n    updateProduct( slug ,values, user.token)\r\n      .then((res)=>{\r\n        if(window.confirm(`${res.data.title} created`)){\r\n          history.push('/admin/products');\r\n        };\r\n        console.log(res.data);\r\n      })\r\n      .catch((err)=>{\r\n        toast.error(\"Coun't eidt\");\r\n        console.log(\"the eroor\",err.response);\r\n      })\r\n  }\r\n\r\n  const handleSubOptions = (e) => {\r\n    e.preventDefault();\r\n    setSubArray([]);\r\n    // if(e.target.value=== currentCategory){\r\n    //   setSubArray(currentSubs);\r\n    // }\r\n    // else{\r\n    //   setSubArray([]);\r\n    // }\r\n    setValues({...values, subs:[], [e.target.name]: e.target.value})\r\n    getOptionSubs(e.target.value)\r\n      .then((res)=>{\r\n          console.log(\"Trigered\", e.target.value);\r\n          \r\n          setSubOptions(res.data);\r\n      })\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    setValues({...values, [e.target.name]: e.target.value})\r\n    \r\n  }\r\n\r\n\r\n  const handleSubChange = (value) => {\r\n    setSubArray(value);\r\n    setValues({...values, subs: value});\r\n  }\r\n\r\n  return ( \r\n    <div className=\"container-fluid \">\r\n      <div className=\"row \">\r\n        <div className=\"col-md-2\">\r\n          <AdminNav />\r\n        </div>\r\n         \r\n        <div className=\"col-md-10\">\r\n          {loading ? (<div>Loading.....</div>):(<h3>Product Create</h3>) }\r\n          {JSON.stringify(values)}\r\n          \r\n          <br/>\r\n          \r\n          <form onSubmit={handleSubmit}>\r\n       \r\n            <div className=\"form-group\">\r\n              <label className=\"float-left \">Title: </label>\r\n              <input \r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"title\"\r\n                value={title}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n            </div>\r\n            {JSON.stringify(subOptions)}\r\n            <div className=\"form-group\">\r\n              <label className=\"float-left \">Description: </label>\r\n              <input \r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"description\"\r\n                value={description}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            {JSON.stringify(subArray)}\r\n            <div className=\"form-group\">\r\n              <label className=\"float-left \">Price: </label>\r\n              <input \r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                name=\"price\"\r\n                value={price}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <FileUpload values={values} setValues={setValues} loading={loading} setLoading={setLoading}/>\r\n            </div>\r\n              <br/>\r\n              <br/>\r\n              <br/>\r\n             <div className=\"form-group\">\r\n              <label className=\"float-left \">Categoy: </label>\r\n              <select className=\"form-control\"\r\n                name=\"category\"\r\n                \r\n                onChange={handleSubOptions}>\r\n                { categories.length>0 && categories.map((c)=>(\r\n                <option selected={category._id===c._id} key={c._id} value={c._id}>{c.name}</option>\r\n            ))}\r\n              </select>\r\n            </div> \r\n            \r\n            <div className=\"form-group\">\r\n              <label className=\"float-left \">Sub category: </label>\r\n              <Select className=\"form-control\"\r\n                mode=\"multiple\"\r\n                value={subArray}\r\n                placeholder=\"Please Select\"\r\n                onChange={handleSubChange}>\r\n                \r\n                { subOptions.length>0 && subOptions.map((sub)=>(\r\n                <Option  key={sub._id} value={sub._id}>{sub.name}</Option>\r\n            ))}\r\n              </Select>\r\n            </div> \r\n            <div className=\"form-group\">\r\n              <label className=\"float-left \">Quantity: </label>\r\n              <input \r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                name=\"quantity\"\r\n                value={quantity}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"float-left \">Shipping: </label>\r\n              <select className=\"form-control\"\r\n                name=\"shipping\"\r\n                value={shipping}\r\n                onChange={handleChange}>\r\n                \r\n                <option value=\"Yes\">Yes</option>\r\n                <option value=\"No\">No</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"float-left \">Color: </label>\r\n              <select className=\"form-control\"\r\n                name=\"color\"\r\n                onChange={handleChange}>\r\n                value={color}\r\n                { colors.map((c)=>(\r\n                  <option value={c}>{c}</option>\r\n                ))}               \r\n              </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"float-left \">Brand: </label>\r\n              <select className=\"form-control\"\r\n                name=\"brand\"\r\n                value={brand}\r\n                onChange={handleChange}>\r\n                \r\n                { brands.map((b)=>(\r\n                  <option value={b}>{b}</option>\r\n                ))}               \r\n              </select>\r\n            </div>\r\n            <button disabled={loading} type=\"submit\" className=\"btn btn-outline-primary float-lg-left mb-3\"> Save </button>\r\n          </form>\r\n        </div>\r\n        \r\n        \r\n      </div>\r\n    </div>\r\n   );\r\n}\r\n \r\nexport default UpdateProduct;","D:\\MERN\\client\\src\\components\\cards\\ProductCards.js",["346","347"],"import React, {useState} from 'react';\r\nimport {Link } from 'react-router-dom'\r\nimport { Card, Tooltip } from 'antd';\r\nimport { EyeOutlined, ShoppingCartOutlined } from '@ant-design/icons'\r\nimport _, { isEqual } from 'lodash';\r\nimport noimage from '../../images/noimage.png';\r\nimport { ratingFunction } from '../../functions/ratingFunction';\r\nimport { useSelector, useDispatch} from 'react-redux';\r\n\r\nconst { Meta } = Card;\r\n\r\nconst ProductCard = ({product}) => {\r\n\r\n  const { images, price, title, slug, description, rating} = product;\r\n  const [tooltip, setTooltip] = useState(\"Click to add to cart\");\r\n\r\n  //redux\r\n  const {user, cart} = useSelector((state)=>({...state}));\r\n  const dispatch = useDispatch();\r\n\r\n  const handleCart = () => {\r\n    //console.log(\"Added to cart\");\r\n    let cart = [];\r\n    if(typeof window != undefined){\r\n      // if cart is already in local storage\r\n      if(localStorage.getItem(\"cart\")){\r\n        cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n      }\r\n      // add the product to the cart\r\n      cart.push({\r\n        ...product,\r\n        count:1,\r\n      })\r\n      // checking for duplicate item before saving to localStorage\r\n      let unique = _.unionWith(cart, isEqual);\r\n      //console.log(\"Unique\", unique)\r\n      localStorage.setItem(\"cart\", JSON.stringify(unique));\r\n      setTooltip(\"Already Added\");\r\n      dispatch({\r\n        type: \"ADD_TO_CART\",\r\n        payloads: unique,\r\n      })\r\n      dispatch({\r\n        type: \"SET_VISIBLE\",\r\n        payloads: true\r\n      })\r\n    }\r\n  }\r\n\r\n  return ( \r\n    <> \r\n      <div className=\"container\">\r\n        { (rating && rating.length>0) ? ratingFunction(product) :\r\n            <div className=\"text-center pt-1 pb-3 font-weight-bold\">No Rating Yet</div>\r\n          }\r\n      \r\n      <Card\r\n        style={{ width: 320, height:320 }}\r\n        cover={<img alt=\"example\" style={{ width: 320, height:320 }}src={images.length ? images[0].url : noimage} />}\r\n        actions={[\r\n        <Link to={`/product/${slug}`}>\r\n          <EyeOutlined key=\"setting\" className=\"text-danger\"/><br/>View Product\r\n        </Link>,\r\n        <Tooltip title={tooltip}>\r\n          <a href onClick={handleCart} disabled={product.quantity<1}>\r\n            <ShoppingCartOutlined className={product.quantity>1 ? \"text-danger\": \"text-secondary\"}/><br/>\r\n            {product.quantity<1 ? \"Out of Stock\": \"Add to Cart\"}\r\n          </a>\r\n        </Tooltip>,\r\n    ]}\r\n      >\r\n      \r\n        <Meta title={`${title} - ${price}`} description={`${description.substring(0,40)}....`} />\r\n      </Card>,\r\n      </div>\r\n    </>\r\n   );\r\n}\r\n \r\nexport default ProductCard;","D:\\MERN\\client\\src\\components\\cards\\Jumbotron.js",[],"D:\\MERN\\client\\src\\components\\cards\\SkeletonCard.js",[],"D:\\MERN\\client\\src\\components\\home\\NewArrivals.js",["348","349"],"import React, { useEffect, useState } from 'react';\r\nimport { listConditionally , getTotalProduct } from '../../functions/productFunction';\r\nimport ProductCard from '../cards/ProductCards';\r\nimport SkeletonCard from '../cards/SkeletonCard';\r\nimport { Pagination } from 'antd';\r\n\r\n\r\nconst NewArrivals = () => {\r\n  \r\n  const [loading, setLoading]= useState(false);\r\n  const [products, setProducts]= useState([]);\r\n  const [page, setPage]= useState(1);\r\n  const [total, setTotal]= useState(0);\r\n  const [perPage, setPerPage]= useState(3);\r\n\r\n\r\n  useEffect(()=>{\r\n    loadproducts();\r\n  },[page]);\r\n\r\n  useEffect(()=>{\r\n    getTotalProduct()\r\n      .then((res)=>{\r\n        setTotal(res.data)\r\n      })\r\n\r\n  })\r\n\r\n  \r\n  const loadproducts = () => {\r\n    setLoading(true);\r\n    listConditionally('createdAt', 'desc', page)\r\n    .then((res)=>{\r\n      setLoading(false);\r\n      setProducts(res.data);\r\n      console.log(\"products\", res.data)\r\n      console.log(\"products--\", products)\r\n    })\r\n    .catch((err)=>{\r\n      console.log(\"Error is\", err)\r\n    })\r\n\r\n  }\r\n  \r\n  // if(!user){\r\n  //   return <RedirectingTo />\r\n  //   //return <Redirect to=\"/login\" />\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      \r\n      <div className=\"container\">\r\n        { loading ? <SkeletonCard count={6}/> : \r\n          <div className=\"row justify-content-md-center\">\r\n            {products.map((product)=>(\r\n              <div className=\"col\" key={product._id}>\r\n                <ProductCard product={product} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        }\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4 offset-md-4 text-center pt-5 p-3\">\r\n          <Pagination \r\n            defaultCurrent={page} \r\n            total={(total/perPage)*10} \r\n            onChange={(value)=>(setPage(value))}\r\n          />\r\n        </div>\r\n      </div>\r\n      \r\n      \r\n    </>\r\n      \r\n    \r\n  );\r\n\r\n  \r\n}\r\n \r\nexport default NewArrivals;","D:\\MERN\\client\\src\\components\\home\\BestSeller.js",["350","351"],"import React, { useEffect, useState } from 'react';\r\nimport { listConditionally, getTotalProduct } from '../../functions/productFunction';\r\nimport ProductCard from '../cards/ProductCards';\r\nimport SkeletonCard from '../cards/SkeletonCard';\r\nimport { Pagination } from 'antd';\r\n\r\n\r\nconst BestSeller = () => {\r\n  \r\n  const [loading, setLoading]= useState(false);\r\n  const [products, setProducts]= useState([]);\r\n  const [page, setPage]= useState(1);\r\n  const [total, setTotal]= useState(0);\r\n  const [perPage, setPerPage]= useState(3);\r\n\r\n\r\n  useEffect(()=>{\r\n    loadproducts();\r\n  },[page]);\r\n\r\n  useEffect(()=>{\r\n    getTotalProduct()\r\n      .then((res)=>{\r\n        setTotal(res.data)\r\n      })\r\n\r\n  })\r\n  \r\n  const loadproducts = () => {\r\n    \r\n    setLoading(true);\r\n    listConditionally('sold', 'desc', page)\r\n    .then((res)=>{\r\n      setLoading(false);\r\n      setProducts(res.data);\r\n      //console.log(\"products\", res.data)\r\n      //console.log(\"products--\", products)\r\n    })\r\n    .catch((err)=>{\r\n      console.log(\"Error is\", err)\r\n    })\r\n\r\n  }\r\n  \r\n  // if(!user){\r\n  //   return <RedirectingTo />\r\n  //   //return <Redirect to=\"/login\" />\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        { loading ? <SkeletonCard count={6}/> : \r\n          <div className=\"row justify-content-md-center\">\r\n            {products.map((product)=>(\r\n              <div className=\"col\" key={product._id}>\r\n                <ProductCard product={product} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        }\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4 offset-md-4 text-center pt-5 p-3\">\r\n          <Pagination \r\n            current={page} \r\n            total={(total/perPage)*10} \r\n            onChange={(value)=>(setPage(value))}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n      \r\n      \r\n  );\r\n\r\n  \r\n}\r\n \r\nexport default BestSeller;","D:\\MERN\\client\\src\\pages\\Product.js",["352"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector} from 'react-redux';\r\nimport ProductCard from '../components/cards/ProductCards';\r\nimport SingleProductCard from '../components/cards/SingleProductCard';\r\nimport { getProduct, productRating, relatedProduct } from '../functions/productFunction';\r\n\r\n\r\n\r\nconst Product = ({match}) => {\r\n  const { user } = useSelector((state)=>({...state}));\r\n\r\n  const [product, setProduct] = useState([])\r\n  const [related, setRelated] = useState([])\r\n  const [star, setStar]= useState(0);\r\n  const { slug } = match.params;\r\n  const { rating }= product;\r\n\r\n  useEffect(() => {\r\n    loadProduct()\r\n  }, [slug]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Product\", rating )\r\n    if(rating && rating.length && user){\r\n        var rated = rating.find((elem)=>(\r\n          elem.postedBy.toString() === user._id.toString()\r\n        )\r\n      )\r\n      console.log(\"Rated status\", rated)\r\n      if(rated !== undefined){\r\n        setStar(rated.star);\r\n      }\r\n      \r\n    }\r\n  },[rating,user]);\r\n\r\n  const loadProduct = () => {\r\n    getProduct(slug)\r\n      .then((res)=>{\r\n        setProduct(res.data);\r\n        console.log(\"ID\", res.data._id)\r\n        relatedProduct(res.data._id)\r\n          .then((res)=>{\r\n            setRelated(res.data);\r\n          })\r\n      })\r\n  }\r\n\r\n  const handleStar = (newRating, name) => {\r\n    setStar(newRating);\r\n    productRating(name, newRating, user.token)\r\n      .then((res)=>{\r\n        console.log(res.data)\r\n        loadProduct()\r\n      })\r\n      .catch((err)=>{\r\n        console.log(err.message)\r\n      })\r\n  }\r\n  \r\n  return ( \r\n    <div className=\"Container-fluid p-3\">\r\n      <div className=\"row pt-3\">\r\n        <SingleProductCard product={product} handleStar={handleStar} star={star} setStar={setStar}/>\r\n        \r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col text-center pt-4 pb-4\">\r\n          <hr/>\r\n            <h4>Related Products</h4>\r\n          <hr/>\r\n        </div>\r\n      </div>\r\n      <div className=\"row pt-3\">{related && related.length ? (related.map((product)=>(\r\n            <div className=\"col-md-4\" key={product._id}>\r\n              <ProductCard product={product} />\r\n            </div>\r\n          ))):<div className=\"text-center col\">No Related Items Found</div>}</div>\r\n      </div>\r\n   );\r\n}\r\n \r\nexport default Product;","D:\\MERN\\client\\src\\components\\cards\\SingleProductCard.js",["353","354","355"],"import React,{useState} from 'react';\r\nimport { useSelector, useDispatch} from 'react-redux';\r\nimport {Link } from 'react-router-dom'\r\nimport { Card, Tabs, Tooltip } from 'antd';\r\nimport { HeartOutlined , ShoppingCartOutlined } from '@ant-design/icons'\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport noimage from '../../images/noimage.png';\r\nimport ProductDetailsList from './ProductDetailsList';\r\nimport StarRatings from 'react-star-ratings';\r\nimport RatingModal from '../modals/RatingModals';\r\nimport { ratingFunction } from '../../functions/ratingFunction'\r\nimport _, { isEqual } from 'lodash';\r\n\r\n\r\nconst { Meta } = Card;\r\nconst { TabPane } = Tabs;\r\n\r\nconst SingleProductCard = ({product, handleStar, star, setStar}) => {\r\n\r\n  const { images, title, slug, description, _id, rating} = product;\r\n  const [tooltip, setTooltip] = useState(\"Click to add to cart\");\r\n\r\n  //redux\r\n  const {user, cart} = useSelector((state)=>({...state}));\r\n  const dispatch = useDispatch();\r\n\r\n  const handleCart = () => {\r\n    //console.log(\"Added to cart\");\r\n    let cart = [];\r\n    if(typeof window != undefined){\r\n      // if cart is already in local storage\r\n      if(localStorage.getItem(\"cart\")){\r\n        cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n      }\r\n      // add the product to the cart\r\n      cart.push({\r\n        ...product,\r\n        count:1,\r\n      })\r\n      // checking for duplicate item before saving to localStorage\r\n      let unique = _.unionWith(cart, isEqual);\r\n      //console.log(\"Unique\", unique)\r\n      localStorage.setItem(\"cart\", JSON.stringify(unique));\r\n      setTooltip(\"Already Added\");\r\n      dispatch({\r\n        type: \"ADD_TO_CART\",\r\n        payloads: unique,\r\n      })\r\n      dispatch({\r\n        type: \"SET_VISIBLE\",\r\n        payloads: true\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  return ( \r\n    <> \r\n      <div className=\"col-md-7\">\r\n      { images && images.length ? \r\n        <Carousel showArrows={true} autoPlay infiniteLoop>\r\n          {images && images.map((image)=><img alt=\"ecom\" src={image.url} key={image.public_id} />)}\r\n        </Carousel> : \r\n        <Card\r\n          \r\n          cover={<img alt=\"example\" src={noimage} className=\"mb-3 card-image\"/>}\r\n        ></Card>}\r\n\r\n        <Tabs type=\"card\">\r\n          <TabPane tab=\"Descriptions\" key=\"1\">\r\n            {description}\r\n          </TabPane>\r\n          <TabPane tab=\"More\" key=\"2\">\r\n            Call Us at xxxxxxxxxxxxxxx\r\n          </TabPane>\r\n        </Tabs>\r\n\r\n\r\n      </div>\r\n     \r\n      <div className=\"col-md-5\">\r\n        <h1 className=\"p-3 bg-info\">{title}</h1>\r\n        { (rating && rating.length>0) ? ratingFunction(product) :\r\n          <div className=\"text-center pt-1 pb-3 font-weight-bold\">No Rating Yet</div>\r\n         }\r\n       \r\n        <Card\r\n          style={{  height:320 }}\r\n          \r\n          actions={[\r\n          <Link to={`/product/${slug}`}>\r\n            <HeartOutlined key=\"setting\" className=\"text-danger\"/><br/>Add to Wishlist\r\n          </Link>,\r\n          <Tooltip title={tooltip}>\r\n          <a onClick={handleCart}>\r\n            <ShoppingCartOutlined className=\"text-danger\"/><br/>Add to Cart\r\n          </a>\r\n        </Tooltip>,\r\n          <RatingModal handleStar={handleStar}>\r\n            <StarRatings \r\n              rating={star}\r\n              name= {_id}\r\n              starRatedColor=\"red\"\r\n              changeRating={handleStar}\r\n              numberOfStars={5}\r\n              isSelectable={true}\r\n            />\r\n          </RatingModal>\r\n        ]}\r\n        >\r\n        \r\n          <Meta description={description} />\r\n          <ProductDetailsList product={product}/>\r\n\r\n        </Card>,\r\n      </div>\r\n\r\n      \r\n    </>\r\n   );\r\n}\r\n \r\nexport default SingleProductCard;","D:\\MERN\\client\\src\\components\\cards\\ProductDetailsList.js",[],"D:\\MERN\\client\\src\\components\\modals\\RatingModals.js",["356"],"import React, {useState} from 'react';\r\nimport { useSelector } from 'react-redux'\r\nimport { useHistory, useParams} from 'react-router-dom';\r\nimport { Modal, Button } from 'antd';\r\nimport { StarOutlined } from '@ant-design/icons'\r\n\r\nconst RatingModal = ({children, handleStar}) => {\r\n  const { user } = useSelector(state=>({...state}));\r\n  const [ modalVisible, setModalVisible ] = useState(false);\r\n\r\n  let history = useHistory();\r\n  let params = useParams();\r\n\r\n  const handleClick = () => {\r\n    //console.log(\"History\", history)\r\n    if(user && user.token){\r\n      setModalVisible(true)\r\n    }else{\r\n      history.push({\r\n        pathname: \"/login\",\r\n        state: { from: `/product/${params.slug}`}\r\n      });\r\n    }\r\n  }\r\n\r\n  return ( \r\n    <>\r\n      <div onClick={handleClick}>\r\n        <StarOutlined className=\"text-danger\"/><br/>\r\n        { user && user.token ? \"Give a Rating\": \"Login to Rate\"}\r\n      </div>\r\n      <Modal\r\n        title=\"Give Rating\"\r\n        visible={modalVisible}\r\n        onOk={()=>{setModalVisible(false)}\r\n          } \r\n        onCancel={()=>{setModalVisible(false)}}\r\n      >\r\n        {children}\r\n      </Modal>\r\n    </>\r\n   );\r\n}\r\n \r\nexport default RatingModal;\r\n","D:\\MERN\\client\\src\\functions\\ratingFunction.js",[],"D:\\MERN\\client\\src\\components\\category\\CategoryListing.js",[],"D:\\MERN\\client\\src\\pages\\category\\CategoryProductHome.js",[],"D:\\MERN\\client\\src\\components\\subCategory\\subCategoryListing.js",[],"D:\\MERN\\client\\src\\pages\\sub\\SubsCategoryHome.js",[],"D:\\MERN\\client\\src\\components\\SearchFilter.js",["357"],"import React, {useState} from 'react';\r\nimport {useHistory} from 'react-router-dom'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport {SearchOutlined} from '@ant-design/icons'\r\n\r\n\r\nconst SearchFilter = () => {\r\n\r\n  const [search, setSearch] = useState('');\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { query } = useSelector((state)=>({...state}))\r\n  \r\n\r\n  const handleSubmit = (e)=>{\r\n    e.preventDefault();\r\n    history.push(`/shop`);\r\n    setSearch(e.target.value);\r\n  }\r\n\r\n  const handleChange = (e)=>{\r\n    setSearch(e.target.value);\r\n    console.log(\"query\", e.target.value)\r\n    dispatch({type: \"QUERY\", payloads: {text:e.target.value}})\r\n  }\r\n\r\n  return ( \r\n    <div className=\"float-right\">\r\n      <form className=\"form-inline my-2 my-lg-0\" onSubmit={handleSubmit}>\r\n        <input className=\"form-control mr-sm-2\" value={query.text} type=\"text\" placeholder=\"Search\" onChange={handleChange} />\r\n        <SearchOutlined onClick={handleSubmit}/>\r\n      </form>\r\n    </div>\r\n    \r\n   );\r\n\r\n}\r\n \r\nexport default SearchFilter;","D:\\MERN\\client\\src\\reducers\\queryReducer.js",[],"D:\\MERN\\client\\src\\pages\\product\\Shop.js",["358","359","360","361","362","363","364"],"import React, {useEffect, useState} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport { listProducts, queryProduct } from '../../functions/productFunction';\r\nimport ProductCards from '../../components/cards/ProductCards'\r\nimport { Menu, Slider, Checkbox, Radio } from 'antd';\r\nimport { DollarOutlined, DownSquareOutlined, StarOutlined } from '@ant-design/icons';\r\nimport { getCategories } from '../../functions/categoryFunctions';\r\nimport Star from '../../components/forms/Star'\r\nimport { getSubs } from '../../functions/subFunctions';\r\n\r\nconst { SubMenu } = Menu;\r\n\r\n\r\nconst Shop = () => {\r\n  const dispatch = useDispatch();\r\n  const [products, setProducts]= useState([]);\r\n  const [loading, setLoading]= useState(true);\r\n  const [price, setPrice] = useState([0,0]);\r\n  const [ok, setOk] = useState(false);\r\n  const [category, setCategory] = useState([]);\r\n  const [categoryIds, setCategoryIds] = useState([]);\r\n  const [star, setStar] = useState(\"\");\r\n  const [subs, setSubs] = useState([]);\r\n  const [sub, setSub] = useState(\"\");\r\n  const [shippings, setShippings] = useState([\"Yes\",\"No\"]);\r\n  const [shipping, setShipping] = useState(\"\");\r\n  const [brands, setBrands] = useState([\"Apple\",\"Samsung\",\"ASUS\",\"MSI\",\"Lenovo\"])\r\n  const [brand, setBrand] = useState(\"\")\r\n  const [colors, setColors] = useState([\"Black\",\"Red\",\"White\",\"Blue\",\"Silver\"])\r\n  const [color, setColor] = useState(\"\")\r\n  const {query}= useSelector((state)=>({...state}));\r\n  const { text }= query;\r\n\r\n  useEffect(()=>{\r\n    getCategories()\r\n      .then((res)=>{\r\n        setCategory(res.data);\r\n        \r\n      })\r\n\r\n    getSubs()\r\n      .then((res)=>{\r\n        setSubs(res.data);\r\n        console.log(\"Subs\", res.data);\r\n      })\r\n\r\n    if(text.length>0){\r\n      filterProducts({query: text}); \r\n    }\r\n    productLoad();\r\n  },[])\r\n\r\n  //helper function after appling filter\r\n  const filterProducts = (arg) =>{\r\n    queryProduct(arg)\r\n      .then((res)=>{\r\n        \r\n        setLoading(false)\r\n        setProducts(res.data);\r\n        console.log(\"Data\", res.data);\r\n      })\r\n  }\r\n\r\n  //helper before appling filter\r\n  const productLoad = ()=>{\r\n    listProducts(12)\r\n      .then((res)=>{\r\n        setProducts(res.data);\r\n        setLoading(false)\r\n      }).catch((err)=>{\r\n        setLoading(true)\r\n        \r\n      })\r\n  }\r\n\r\n  // use effect for query\r\n  useEffect(()=>{\r\n    if(text.length<1){\r\n      productLoad();\r\n    }\r\n    setCategoryIds([]);\r\n    setPrice([0,0]);\r\n    filterProducts({query: text});\r\n  },[text])\r\n\r\n  //price handle\r\n  const handlePrice = (value)=>{\r\n    setPrice(value);\r\n    setCategoryIds([]);\r\n    setStar(\"\");\r\n    setSub(\"\");\r\n    dispatch({\r\n      type: \"QUERY\",\r\n      payloads:{text:\"\"}\r\n    })\r\n    setTimeout(()=>{\r\n      setOk(!ok);\r\n    },300)\r\n  }\r\n\r\n  useEffect(()=>{\r\n    if(price[1]===0){\r\n      productLoad();\r\n    }else{\r\n      filterProducts({price});\r\n    }\r\n  },[ok])\r\n\r\n  //Category Checkbox list\r\n  const categoryList = () =>(\r\n    category.map((c)=>(\r\n      <div key={c._id}>\r\n        <Checkbox\r\n        className=\"pb-2 pr-4 pl-4\"\r\n        value={c._id}\r\n        name=\"category\"\r\n        onChange={handleCheck}\r\n        checked={categoryIds.includes(c._id)}\r\n      >\r\n       {c.name}\r\n      </Checkbox>\r\n      </div>\r\n      \r\n    ))\r\n  )\r\n\r\n  const handleCheck =(e)=>{\r\n    dispatch({\r\n      type: \"QUERY\",\r\n      payloads:{text:\"\"}\r\n    })\r\n    setPrice([0,0]);\r\n    setBrand(\"\");\r\n    setColor(\"\");\r\n    setStar(\"\");\r\n    setSub(\"\");\r\n    let inTheState = [...categoryIds];\r\n    let justChecked = e.target.value;\r\n    let isInTheState = inTheState.indexOf(justChecked);\r\n    if(isInTheState === -1){\r\n      inTheState.push(e.target.value);\r\n    }else{\r\n      \r\n      inTheState.splice(isInTheState,1);\r\n    }\r\n    setCategoryIds(inTheState);\r\n    filterProducts({category: inTheState});\r\n    \r\n  }\r\n\r\n  // star rating sorting\r\n\r\n  const handleStarClick=(num) => {\r\n    dispatch({\r\n      type: \"QUERY\",\r\n      payloads:{text:\"\"}\r\n    })\r\n    setCategoryIds([]);\r\n    setPrice([0,0]);\r\n    setStar(num);\r\n    setSub(\"\");\r\n    setShipping(\"\");\r\n    setColor(\"\");\r\n    setBrand(\"\");\r\n    filterProducts({stars: num});\r\n  }\r\n\r\n  const starRating = () =>(\r\n    <div className=\"pb-4 pr-4 pl-4\">\r\n      <Star starClick={handleStarClick}  numberOfStars={5}/>\r\n      <Star starClick={handleStarClick}  numberOfStars={4}/>\r\n      <Star starClick={handleStarClick}  numberOfStars={3}/>\r\n      <Star starClick={handleStarClick}  numberOfStars={2}/>\r\n      <Star starClick={handleStarClick}  numberOfStars={1}/>\r\n    </div>\r\n  )\r\n\r\n  // sub category filtering\r\n\r\n  const handleSub = (sub) => {\r\n    dispatch({\r\n      type: \"QUERY\",\r\n      payloads:{text:\"\"}\r\n    })\r\n    setSub(sub);\r\n    setCategoryIds([]);\r\n    setPrice([0,0]);\r\n    setStar(\"\");\r\n    setShipping(\"\");\r\n    setColor(\"\");\r\n    setBrand(\"\");\r\n    console.log(\"Target\", sub);\r\n    filterProducts({sub: sub});\r\n  }\r\n\r\n  const subCategoryList = () => (\r\n    subs.map((sub)=>(\r\n      <div style={{cursor:\"pointer\"}} key={sub._id} className=\"m-1 p-2 badge badge-secondary\" onClick={()=>handleSub(sub)}>{sub.name}</div>\r\n    ))\r\n  )\r\n\r\n  // shipping filtering\r\n  const handleShipping = (e) => {\r\n    dispatch({\r\n      type: \"QUERY\",\r\n      payloads:{text:\"\"}\r\n    })\r\n    setShipping(e.target.value);\r\n    setSub(\"\");\r\n    setCategoryIds([]);\r\n    setPrice([0,0]);\r\n    setStar(\"\");\r\n    setColor(\"\");\r\n    setBrand(\"\");\r\n    filterProducts({shipping: e.target.value})\r\n  }\r\n  const showShippings = () => (\r\n    shippings.map((s)=>(\r\n      <Radio\r\n        className=\"pl-1 pb-1 pr-1\"\r\n        name={s}\r\n        value={s}\r\n        checked={s===shipping}\r\n        onChange={handleShipping}\r\n      >{s}</Radio>\r\n    ))\r\n  )\r\n\r\n  // brand filtering\r\n\r\n  const handleBrand = (e) => {\r\n    dispatch({\r\n      type: \"QUERY\",\r\n      payloads:{text:\"\"}\r\n    })\r\n    setBrand(e.target.value);\r\n    setSub(\"\");\r\n    setCategoryIds([]);\r\n    setPrice([0,0]);\r\n    setStar(\"\");\r\n    setShipping(\"\");\r\n    setColor(\"\");\r\n    filterProducts({brand: e.target.value})\r\n  }\r\n\r\n  const showBrands = () => (\r\n    brands.map((b)=>(\r\n      <Radio\r\n        className=\"pl-1 pb-1 pr-4\"\r\n        name={b}\r\n        value={b}\r\n        checked={b===brand}\r\n        onChange={handleBrand}\r\n      >{b}</Radio>\r\n    ))\r\n  )\r\n\r\n  // colors filtering\r\n\r\n  const handleColor = (e) => {\r\n    dispatch({\r\n      type: \"QUERY\",\r\n      payloads:{text:\"\"}\r\n    })\r\n    setColor(e.target.value);\r\n    setSub(\"\");\r\n    setCategoryIds([]);\r\n    setPrice([0,0]);\r\n    setStar(\"\");\r\n    setShipping(\"\");\r\n    setBrand(\"\");\r\n    filterProducts({color: e.target.value})\r\n  }\r\n  const showColors = () => (\r\n    colors.map((c)=>(\r\n    \r\n      <Radio\r\n        className=\"pl-2 pb-2 pr-4\"\r\n        name={c}\r\n        value={c}\r\n        checked={c===color}\r\n        onChange={handleColor}\r\n      >{c}</Radio>\r\n      \r\n    \r\n    ))\r\n  )\r\n\r\n\r\n  return ( \r\n    <div className=\"container-fluid pt-3\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-2\">\r\n          <h4>Filter options</h4>\r\n          {JSON.stringify(price, ok)}\r\n          <hr/>\r\n          <Menu\r\n            //defaultSelectedKeys={['1']}\r\n            defaultOpenKeys={['sub1','sub2','star',\"shippings\", \"brands\"]}\r\n            mode=\"inline\"\r\n            >\r\n            <SubMenu key=\"sub1\" title={<span className=\"h6 text-justify\"><DollarOutlined />Price</span>}>\r\n              <Slider range defaultValue={price} value={price} max=\"1000\" tipFormatter={(v)=>`$${v}`} onChange={handlePrice} />\r\n            </SubMenu>\r\n            <SubMenu key=\"sub2\" title={<span className=\"h6\"><DownSquareOutlined/>Category</span>}> \r\n              <div style={{height:\"150px\", overflow:\"scroll\" }}>{categoryList()}</div>\r\n            </SubMenu>\r\n            <SubMenu key=\"star\" title={<span className=\"h6\"><StarOutlined/>Star</span>}> \r\n              <div >{starRating()}</div>\r\n            </SubMenu>\r\n            <SubMenu key=\"subCategory\" title={<span className=\"h6\"><DownSquareOutlined/>Sub Categories</span>}> \r\n              <div className=\"pl-4\">{subCategoryList()}</div>\r\n            </SubMenu>\r\n            <SubMenu key=\"shippings\" title={<span className=\"h6\"><DownSquareOutlined/>Shipping</span>}> \r\n              <div className=\"pl-4\">{showShippings()}</div>\r\n            </SubMenu>\r\n            <SubMenu key=\"colors\" title={<span className=\"h6\"><DownSquareOutlined/>Colors</span>}> \r\n              <div className=\"pl-4\">{showColors()}</div>\r\n            </SubMenu>\r\n            <SubMenu key=\"brands\" title={<span className=\"h6\"><DownSquareOutlined/>Brands</span>}> \r\n              <div className=\"pl-4 pb-4\">{showBrands()}</div>\r\n            </SubMenu>\r\n          </Menu>\r\n        </div>\r\n        \r\n        <div className=\"col-md-9\">\r\n          {loading ? <h4 className=\"text-danger\">Loading....</h4>:<h4 className=\"text-danger\">Products</h4>}\r\n          {products.length <1 && <h4>No Products Found</h4>}\r\n          <div className=\"row\">\r\n            {products && products.map((p)=>(\r\n              <div key={p._id} className=\"col-md-4\">\r\n                <ProductCards product={p}/>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n   );\r\n}\r\n \r\nexport default Shop;","D:\\MERN\\client\\src\\components\\forms\\Star.js",[],"D:\\MERN\\client\\src\\reducers\\cartReducer.js",[],"D:\\MERN\\client\\src\\pages\\Cart.js",["365","366"],"import React,{useState} from 'react';\r\nimport { useSelector, useDispatch} from 'react-redux';\r\nimport {Link} from 'react-router-dom'\r\nimport ProductCardCheckOut from '../components/cards/ProductCardCheckOut';\r\nimport { userCart } from '../functions/userFunctions';\r\n\r\n\r\nconst Cart = ({history}) => {\r\n  const { user, cart} = useSelector((state)=>({...state}));\r\n  console.log(\"Process Env---\", process.env);\r\n  const gettotal = () => {\r\n    return cart.reduce((currentValue, nextValue)=>{\r\n      return currentValue + nextValue.count* nextValue.price\r\n    },0)\r\n  }\r\n\r\n  const saveCartToDB = () => {\r\n    \r\n    userCart(cart, user.token)\r\n      .then((res)=>{\r\n        \r\n        //console.log(\"res\", res);\r\n        if(res.data.ok){\r\n          history.push(\"/user/checkout\");\r\n        }\r\n      }).catch((err)=>{\r\n        console.log(\"Saving Cart to DB failed\", err);\r\n        \r\n    })\r\n\r\n    \r\n  }\r\n\r\n  const showCartItems = () => (\r\n    <table className=\"table table-bordered\">\r\n      <thead className=\"thead-light\">\r\n        <tr>\r\n          <th scope=\"col\">Image</th>\r\n          <th scope=\"col\">Title</th>\r\n          <th scope=\"col\">Price</th>\r\n          <th scope=\"col\">Brand</th>\r\n          <th scope=\"col\">Color</th>\r\n          <th scope=\"col\">Count</th>\r\n          <th scope=\"col\">Shipping</th>\r\n          <th scope=\"col\">Remove</th>\r\n        </tr>\r\n      </thead>\r\n      {cart.map((p)=>(\r\n        <ProductCardCheckOut key={p._id} product={p}/>\r\n      ))}\r\n    </table>\r\n  )\r\n  \r\n  return (\r\n    <div className=\"container-fluid pt-3\">\r\n      <div className=\"row pl-3\">\r\n        <h4>{cart.length} Products in Cart</h4>\r\n      </div>\r\n      \r\n      <div className=\"row\">\r\n        <div className=\"col-md-8\">\r\n          { !cart.length ? <h6>No Product in the cart <Link to=\"/shop\">Continue Shopping</Link></h6>:\r\n            showCartItems()}\r\n        </div>\r\n        <div className=\"col-md-4 text-left\">\r\n          <h4>Order Summary</h4>\r\n          <hr/>\r\n          {cart.length && cart.map((p, i)=>(\r\n            <div key={i}>\r\n              <p>{p.title} X {p.count} = ${p.price*p.count}</p>\r\n            </div>  \r\n          ))}\r\n          <hr/>\r\n          <div>Total    ${gettotal()}</div>\r\n          <br/>\r\n          {user ? \r\n            (<button \r\n              className=\"btn btn-sm btn-outline-primary mt-2\"\r\n              onClick={saveCartToDB}\r\n              disabled={!cart.length}>\r\n              Proceed to checkout\r\n            </button>):\r\n            (<button className=\"btn btn-sm btn-outline-primary\">\r\n              <Link to={\r\n                    {\r\n                      pathname:\"/login\",\r\n                      state:{from: \"cart\"}\r\n                    }\r\n                 }>Login to Checkout\r\n              </Link>\r\n            </button>)}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cart;\r\n","D:\\MERN\\client\\src\\components\\cards\\ProductCardCheckOut.js",["367","368","369","370"],"import React from 'react';\r\nimport {useSelector, useDispatch}  from 'react-redux';\r\nimport ModalImage from \"react-modal-image\";\r\nimport noimage from '../../images/noimage.png';\r\nimport {toast} from 'react-toastify'\r\nimport {CheckCircleOutlined, CloseCircleOutlined, CloseOutlined } from '@ant-design/icons'\r\n\r\n\r\nconst ProductCardCheckOut = ({product}) => {\r\n\r\n  const colors= [\"Black\",\"Red\",\"White\",\"Blue\",\"Silver\"];\r\n  //const {cart} = useSelector((state)=>({...state}));\r\n  const dispatch = useDispatch();\r\n\r\n  const handleCountChange = (e) => {\r\n    var count;\r\n    if(product.quantity<e.target.value){\r\n      toast.error(\"No more product in stock\");\r\n      return;\r\n    }\r\n\r\n    if(e.target.value<1){\r\n      count =1;\r\n    }else{\r\n      count= e.target.value;\r\n    }\r\n\r\n    var cart =[];\r\n    if(typeof window != \"undefined\"){\r\n      if(localStorage.getItem(\"cart\")){\r\n        cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n      }\r\n    }\r\n    cart.map((p, i)=>{\r\n      if(p._id === product._id){\r\n        cart[i].count = count;\r\n      }\r\n        \r\n  })\r\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n    dispatch({\r\n      type: \"ADD_TO_CART\",\r\n      payloads: cart,\r\n    })\r\n  }\r\n\r\n  \r\n\r\n  const handleColorChange = (e) => {\r\n    var cart =[];\r\n    if(typeof window != \"undefined\"){\r\n      if(localStorage.getItem(\"cart\")){\r\n        cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n      }\r\n    }\r\n    cart.map((p, i)=>{\r\n      if(p._id === product._id){\r\n        cart[i].color = e.target.value;\r\n        \r\n      }  \r\n    })\r\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n    dispatch({\r\n      type: \"ADD_TO_CART\",\r\n      payloads: cart,\r\n    })\r\n  }\r\n\r\n  const handleRemove = (e) => {\r\n    var cart =[];\r\n    if(typeof window != \"undefined\"){\r\n      if(localStorage.getItem(\"cart\")){\r\n        cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n      }\r\n    }\r\n    cart.map((p, i)=>{\r\n      if(p._id === product._id){\r\n        cart.splice(i, 1);\r\n        \r\n      }  \r\n    })\r\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n    dispatch({\r\n      type: \"ADD_TO_CART\",\r\n      payloads: cart,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <tbody>\r\n      <tr>\r\n        <td>\r\n          <div style={{ width:\"50px\", height:\"auto\"}}>\r\n            {product.images.length ? \r\n            (<ModalImage \r\n              small={product.images[0].url}\r\n              large={product.images[0].url}></ModalImage>):\r\n              (<ModalImage \r\n              small={noimage}\r\n              large={noimage}></ModalImage>)}\r\n          </div>\r\n        </td>\r\n        <td>{product.title}</td>\r\n        <td>${product.price}</td>\r\n        <td>{product.brand}</td>\r\n        <td>\r\n          <select onChange={handleColorChange}  className=\"form-control\">\r\n            { product.color ? <option >{product.color}</option>: <option>Select..</option>  }\r\n            {colors.filter((c)=>c !== product.color).map((c)=>(\r\n              <option key={c} value={c}>{c}</option>\r\n            ))}\r\n          </select>\r\n        </td>\r\n        <td>\r\n          <input value={product.count} onChange={handleCountChange} style={{width: \"80px\"}} className=\"form-control\" type=\"number\">\r\n              \r\n          </input>\r\n        </td>\r\n        <td>\r\n            {product.shipping===\"Yes\" ? (<CheckCircleOutlined className=\"text-success\" />):(<CloseCircleOutlined className=\"text-danger\"/>)}\r\n        </td>\r\n        <td>\r\n          <CloseOutlined \r\n            className=\"text-danger pointer\"\r\n            onClick={handleRemove}\r\n          />\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  );\r\n}\r\n\r\nexport default ProductCardCheckOut;\r\n","D:\\MERN\\client\\src\\reducers\\drawerReducer.js",[],"D:\\MERN\\client\\src\\components\\drawer\\SideDrawer.js",["371"],"import React from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport { Drawer, Button } from 'antd';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst SideDrawer = () => {\r\n\r\n  const { drawer, cart } = useSelector((state)=>({...state}));\r\n  const dispatch = useDispatch();\r\n\r\n  \r\n  return (\r\n    <div>\r\n      <Drawer\r\n        title=\"Cart\"\r\n        placement=\"right\"\r\n        \r\n        onClose={()=>{dispatch({\r\n          type: \"SET_VISIBLE\",\r\n          payloads: false\r\n        })}}\r\n        visible={drawer}\r\n      >\r\n        <h6>{cart.length} {cart.length < 2 ? \"item\": \"items\" } added to cart</h6>\r\n        <hr/>\r\n        {cart.map((p)=>(\r\n          <div>\r\n            \r\n            <img alt=\"\" style={{width: \"150px\", height: \"50px\"}} src={p.images.length ? p.images[0].url: \"No Image\"}>\r\n            </img>\r\n            <h6>{p.title}--- ${p.price}</h6>\r\n         \r\n            <hr className=\"text-info\"/>\r\n          </div>\r\n        ))}\r\n        <div>\r\n          <Link to=\"/cart\"><button onClick={()=>{dispatch({\r\n          type: \"SET_VISIBLE\",\r\n          payloads: false\r\n        })}} className=\"btn btn-outline-info justify\">Go to Cart</button></Link>\r\n        </div>\r\n        \r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SideDrawer;\r\n","D:\\MERN\\client\\src\\pages\\CheckOut.js",["372","373"],"import React,{ useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { emptyUserCart, getCart, updateAddress } from '../functions/userFunctions';\r\nimport { toast } from 'react-toastify';\r\nimport { currentUser } from '../functions/authFunctions';\r\nimport { applyCoupon } from '../functions/couponFunctions';\r\n\r\nconst CheckOut = ({history}) => {\r\n  const { user } = useSelector((state)=>({...state}));\r\n  const [products, setProducts]= useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const [address, setAddress] = useState(\"\");\r\n  const [addressSaved, setAddressSaved] = useState(false);\r\n  const [coupon, setCoupon] = useState(\"\");\r\n  const [ totalAfterDiscount, setTotalAfterDiscount] = useState(\"\");\r\n  const [ discountError,setDiscountError ] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(()=>{\r\n    getCart(user.token)\r\n      .then((res)=>{\r\n        setProducts(res.data.products);\r\n        setTotal(res.data.total);\r\n        //console.log(\"Cart Data\", JSON.stringify(res.data, null, 4));\r\n        \r\n      }).catch((err)=>{\r\n        console.log(\"Cart Fetch Error\");\r\n      })\r\n  },[])\r\n\r\n  useEffect(()=>{\r\n    currentUser(user.token)\r\n      .then((res)=>{\r\n        setAddress(res.data.address);\r\n        \r\n      })\r\n  },[])\r\n\r\n  const emptyCart = () => {\r\n    // remove from localStorage\r\n      if(typeof window != undefined){\r\n        localStorage.removeItem(\"cart\");\r\n      }\r\n    // remove from redux\r\n      dispatch({\r\n        type: \"ADD_TO_CART\",\r\n        payloads: [],\r\n      });\r\n    // remove from DB\r\n    \r\n      emptyUserCart(user.token)\r\n        .then((res)=>{\r\n          setProducts([]);\r\n          setTotal(0);\r\n          setTotalAfterDiscount(\"\");\r\n          toast.success(\"Cart clear. Browse to add new products\");\r\n        })\r\n        \r\n  }\r\n\r\n    \r\n  const addressSubmit = (e) => {\r\n    e.preventDefault();\r\n    updateAddress(address, user.token)\r\n      .then((res)=>{\r\n        setAddressSaved(true);\r\n        toast.success(\"Address Saved Succesfully\");\r\n      })\r\n  }\r\n\r\n  const handleCoupon = (e) => {\r\n    e.preventDefault();\r\n    //console.log(\"coupon submited\")\r\n    applyCoupon(coupon, user.token)\r\n      .then((res)=>{\r\n        console.log(\"coupon executed\", res.data);\r\n        if(res.data.error){\r\n          setDiscountError(res.data.error);\r\n          setTotalAfterDiscount(\"\");\r\n          dispatch({\r\n            type: \"COUPON_APPLIED\",\r\n            payloads: false\r\n          })\r\n        }else{\r\n          setTotalAfterDiscount(res.data);\r\n          dispatch({\r\n            type: \"COUPON_APPLIED\",\r\n            payloads: true\r\n          })\r\n        }\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className=\"container pt-4\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 text-left\">\r\n          <div>\r\n            <h4>Delivery Info</h4>\r\n            <hr/>\r\n            <h6>Add Your Delivery Address</h6>\r\n           \r\n            <form onSubmit={addressSubmit} className=\"form-group\">\r\n              <textarea onFocus className=\"form-control\" value={address} onChange={(e)=> setAddress(e.target.value)}></textarea>\r\n              <br/>\r\n              <button type=\"submit\" className=\"btn btn-info\" >Save</button>  \r\n            </form>\r\n            \r\n            \r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n          </div>\r\n          <div>\r\n            <h6>Have a Coupon?</h6>\r\n            <form className=\"form-group\" onSubmit={handleCoupon}>\r\n              <input className=\"form-control\" value={coupon} onChange={(e)=> {\r\n                setCoupon(e.target.value);\r\n                setDiscountError(\"\");\r\n              }}></input>\r\n              <br/>\r\n              <button type=\"submit\" className=\"btn btn-info\">Submit</button>\r\n            </form>\r\n            {discountError && (<div className=\"bg-danger\">{discountError}</div>)}\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <h4>Order Summary</h4>\r\n          <hr/>\r\n          {products.map((p,i)=>(\r\n            <div key={i}>\r\n              <h6>{p.product.title}-({p.color}) X {p.count} = ${p.price* p.count}</h6> \r\n            </div>\r\n          ))}\r\n          <hr/>\r\n          <h5>Total ${total}</h5>\r\n          <br/>\r\n          {totalAfterDiscount && (<div className=\"bg-info p-3\"><h6>Coupon Executed. You have to pay ${totalAfterDiscount} after discount</h6></div>)}\r\n          <br/>\r\n          <div>\r\n            <button className=\"btn btn-outline-primary\" disabled={!addressSaved || !products.length} onClick={()=>history.push(\"/user/payment\")} >Confirm Order</button>\r\n            <button className=\"btn btn-outline-primary ml-5\" disabled={!products.length} onClick={emptyCart}>Clear Cart</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CheckOut;\r\n","D:\\MERN\\client\\src\\functions\\userFunctions.js",[],"D:\\MERN\\client\\src\\pages\\admin\\Coupon.js",["374","375"],"import React, {useState, useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport AdminNav from '../../components/AdminNav';\r\nimport { useSelector } from 'react-redux'\r\nimport { toast } from 'react-toastify'\r\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { createCoupon, getCoupon, removeCoupon } from '../../functions/couponFunctions';\r\n\r\n\r\n\r\nconst Coupon = () => {\r\n  const { user } = useSelector(state=>({...state}))\r\n  const [ name, setName] = useState('');\r\n  const [ discount, setDiscount ] = useState(0);\r\n  const [ expiry, setExpiry ] = useState(new Date());\r\n  const [ coupons, setCoupons ] = useState([]);\r\n\r\n\r\n  useEffect(()=>{\r\n    loadCoupons();\r\n  },[])\r\n\r\n  \r\n  const loadCoupons = () => {\r\n    getCoupon()\r\n      .then((res)=>{\r\n        setCoupons(res.data);\r\n      }).catch((err)=>{\r\n        console.log(\"Coupon Load Error\");\r\n      })\r\n  }\r\n  \r\n  const couponSubmit = (e) => {\r\n    e.preventDefault();\r\n    //console.log(\"Coupon submited\")\r\n    createCoupon({name, discount, expiry}, user.token)\r\n      .then((res)=>{\r\n        loadCoupons();\r\n        toast.success(`Coupon ${res.data.name} is saved`);\r\n        setName('');\r\n        setDiscount(0);\r\n        setExpiry(new Date());\r\n      }).catch((err)=>{\r\n        toast.error(\"Coupon Didn't save\");\r\n        console.log(\"Error\", err);\r\n      })\r\n  }\r\n\r\n  const deleteCoupon = (couponId) => {\r\n    console.log(\"Remove Clicked\", couponId);\r\n    removeCoupon(couponId, user.token)\r\n      .then((res)=>{\r\n        toast.success(\"Coupon Deleted\");\r\n        loadCoupons();\r\n      }).catch((err)=>{\r\n        toast.error(\"Couldn't Delete the Coupon\");\r\n      })\r\n  }\r\n\r\n  return ( \r\n    <div className=\"container-fluid\">\r\n       <div className=\"row\">\r\n        <div className=\"col-md-2\">\r\n          <nav className=\"float-left\">\r\n            <AdminNav />\r\n          </nav>\r\n        </div>\r\n        \r\n        <div className=\"col-md-9 pt-5\">\r\n          <div className=\"text-left\">\r\n          <h4>Add Coupons</h4>\r\n            <form onSubmit={couponSubmit}>\r\n              <div className=\"form-group\">\r\n                <label className=\"pt-2\">Name:</label>\r\n                <input required autoFocus className=\"form-control\" value={name} onChange={(e)=> setName(e.target.value)}/>\r\n                <label className=\"pt-2\">Discount:</label>\r\n                <input required type=\"number\" value={discount} className=\"form-control\" onChange={(e)=> setDiscount(e.target.value)}/>\r\n                <label className=\"pt-2\">Expiry:</label>\r\n                <br/>\r\n                <DatePicker selected={expiry} onChange={date => setExpiry(date)} />\r\n                <br/>\r\n                <br/>\r\n                <button type=\"submit\" className=\"btn btn-outline-info\">Save</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div>\r\n            <h4>{coupons.length} {coupons.length>1 ? \"coupons\": \"coupon\"} running</h4>\r\n            <table className=\"table table-bordered\">\r\n              <thead className=\"thead-light\">\r\n                <tr className=\"\">\r\n                  <th scope=\"col\">Name</th>\r\n                  <th scope=\"col\">Discount(%)</th>\r\n                  <th scope=\"col\">Expiry Date</th>\r\n                  <th scope=\"col\">Remove</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {coupons.length && coupons.map((c)=>(\r\n                  <tr key={c._id}>\r\n                    <td>{c.name}</td>\r\n                    <td>{c.discount}</td>\r\n                    <td>{new Date(c.expiry).toLocaleDateString()}</td>\r\n                    <td><DeleteOutlined onClick={()=>deleteCoupon(c._id)} className=\"text-danger pointer\"/></td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n          \r\n        </div>  \r\n\r\n\r\n        </div>\r\n\r\n        \r\n     </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Coupon;","D:\\MERN\\client\\src\\functions\\couponFunctions.js",[],"D:\\MERN\\client\\src\\pages\\Payment.js",[],"D:\\MERN\\client\\src\\reducers\\couponReducer.js",[],"D:\\MERN\\client\\src\\components\\CheckoutForm.js",["376"],"import React, {useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { Card } from 'antd';\r\nimport { DollarOutlined, CheckCircleOutlined} from '@ant-design/icons'\r\n\r\nimport {\r\n  CardElement,\r\n  useStripe,\r\n  useElements\r\n} from \"@stripe/react-stripe-js\";\r\nimport { stripPayment } from '../functions/stripFunction';\r\nimport { createOrder, emptyUserCart } from '../functions/userFunctions';\r\n\r\nconst CheckoutForm = ({history}) => {\r\n  const [succeeded, setSucceeded] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [processing, setProcessing] = useState('');\r\n  const [disabled, setDisabled] = useState(true);\r\n  const [clientSecret, setClientSecret] = useState('');\r\n  const [ paymentIntent, setPaymentIntent] = useState(0);\r\n  const [ total, setTotal ] = useState(0);\r\n  const [ payable, setPayable ] = useState(0);\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const { user, coupon } = useSelector((state)=>({...state}));\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(()=>{\r\n    stripPayment(coupon, user.token)\r\n      .then((res)=>{\r\n        console.log(\"received secrete key\",res.data);\r\n        setTotal(res.data.total);\r\n        setPayable(res.data.payable);\r\n        setClientSecret(res.data.clientSecret);\r\n      })\r\n  },[])\r\n\r\n\r\n  const cardStyle = {\r\n    style: {\r\n      base: {\r\n        color: \"#32325d\",\r\n        fontFamily: 'Arial, sans-serif',\r\n        fontSmoothing: \"antialiased\",\r\n        fontSize: \"16px\",\r\n        \"::placeholder\": {\r\n          color: \"#32325d\"\r\n        }\r\n      },\r\n\r\n      invalid: {\r\n        color: \"#fa755a\",\r\n        iconColor: \"#fa755a\"\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleChange = async (event) => {\r\n    // Listen for changes in the CardElement\r\n    // and display any errors as the customer types their card details\r\n    setDisabled(event.empty);\r\n    setError(event.error ? event.error.message : \"\");\r\n  };\r\n\r\n  const handleSubmit = async ev => {\r\n    ev.preventDefault();\r\n    setProcessing(true);\r\n    const payload = await stripe.confirmCardPayment(clientSecret, {\r\n      payment_method: {\r\n        card: elements.getElement(CardElement)\r\n      }\r\n    });\r\n    console.log(\"payment succes\", payload);\r\n    console.log(\"payment amount\", payload.paymentIntent.amount);\r\n    setPaymentIntent(payload.paymentIntent.amount);\r\n    if (payload.error) {\r\n      setError(`Payment failed ${payload.error.message}`);\r\n      setProcessing(false);\r\n    } else {\r\n      setError(null);\r\n      setProcessing(false);\r\n      setSucceeded(true);\r\n      dispatch({\r\n        type: \"ADD_TO_CART\",\r\n        payloads: [],\r\n      });\r\n      dispatch({\r\n        type: \"COUPON_APPLIED\",\r\n        payloads: false\r\n      });\r\n      if(typeof window != undefined){\r\n        localStorage.removeItem(\"cart\");\r\n      };\r\n\r\n      createOrder(payload, user.token)\r\n        .then((res)=>{\r\n          console.log(\"res from create order\",res.data)\r\n          if(res.data.ok){\r\n            emptyUserCart(user.token)\r\n            .then((res)=>{\r\n             console.log(\"done\");\r\n             \r\n           })\r\n          }\r\n        })\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n    {coupon ? (<div className=\"bg-info\">Payment after discount ${payable}</div>):(<div className=\"text-alert\">No Coupon Applied</div>)}\r\n    {succeeded && (<p>${paymentIntent/100} Payment Successfull <Link to=\"/user/history\">Go to order history</Link> </p>)}\r\n    <p></p>\r\n    <Card\r\n      \r\n      //style={{ width: 350, height: 250 }}\r\n     // cover={<img style={{height: '150px', objectFit: 'cover', marginBottom: \"-50px\" }} alt=\"example\" src={shoppingCart} />}\r\n      actions={\r\n        [<>\r\n          <DollarOutlined className=\"text-info\" />Total Bill ${total}\r\n        </>,\r\n        <>\r\n          <CheckCircleOutlined className=\"text-info\"/>Payable ${payable}\r\n        </>]\r\n      }\r\n    >\r\n    \r\n  </Card>,\r\n    \r\n    <form id=\"payment-form\" className=\"stripe-form\" onSubmit={handleSubmit}>\r\n      <CardElement id=\"card-element\" className=\"stripe-input\" options={cardStyle} onChange={handleChange} />\r\n    <button\r\n      disabled={processing || disabled || succeeded}\r\n      id=\"submit\"\r\n      className=\"stripe-button\"\r\n    >\r\n      <span id=\"button-text\">\r\n        {processing ? (\r\n          <div className=\"spinner\" id=\"spinner\"></div>\r\n        ) : (\r\n          \"Pay now\"\r\n        )}\r\n      </span>\r\n    </button>\r\n    {/* Show any error that happens when processing the payment */}\r\n    {error && (\r\n      <div className=\"card-error\" role=\"alert\">\r\n        {error}\r\n      </div>\r\n    )}\r\n\r\n    {/* Show a success message upon completion */}\r\n\r\n    <p className={succeeded ? \"result-message\" : \"result-message hidden\"}>\r\n      Payment succeeded, see your order history\r\n      <a\r\n        href={`https://dashboard.stripe.com/test/payments`}\r\n      >\r\n        {\" \"}\r\n        Stripe dashboard.\r\n      </a> \r\n    </p>\r\n  </form>\r\n  </>\r\n  );\r\n}\r\n\r\nexport default CheckoutForm;\r\n","D:\\MERN\\client\\src\\functions\\stripFunction.js",[],"D:\\MERN\\client\\src\\components\\order\\Invoice.js",["377","378"],"import React from 'react';\r\nimport { Document, Page, Text, View, StyleSheet, PDFDownloadLink } from '@react-pdf/renderer';\r\nimport { Table, TableHeader, TableCell, TableBody, DataTableCell  } from \"@david.kucsai/react-pdf-table\";\r\n\r\nconst Invoice = ({order}) => {\r\n\r\n  const styles = StyleSheet.create({\r\n    body: {\r\n      paddingTop: 35,\r\n      paddingBottom: 65,\r\n      paddingHorizontal: 35,\r\n      border: \"1px solid red\",\r\n    },\r\n    title: {\r\n      fontSize: 24,\r\n      textAlign: \"center\",\r\n    },\r\n    table: {\r\n      paddingTop : 30,\r\n    },\r\n    author: {\r\n      fontSize: 12,\r\n      textAlign: \"center\",\r\n      marginBottom: 40,\r\n    },\r\n    subtitle: {\r\n      fontSize: 18,\r\n      margin: 12,\r\n    },\r\n    text: {\r\n      margin: 12,\r\n      fontSize: 14,\r\n      textAlign: \"justify\",\r\n      color: \"red\",\r\n    },\r\n    image: {\r\n      marginVertical: 15,\r\n      marginHorizontal: 100,\r\n    },\r\n    header: {\r\n      fontSize: 12,\r\n      marginBottom: 20,\r\n      textAlign: \"center\",\r\n      color: \"grey\",\r\n    },\r\n    footer: {\r\n      padding: \"100px\",\r\n      fontSize: 12,\r\n      marginBottom: 20,\r\n      textAlign: \"center\",\r\n      color: \"grey\",\r\n    },\r\n    pageNumber: {\r\n      position: \"absolute\",\r\n      fontSize: 12,\r\n      bottom: 30,\r\n      left: 0,\r\n      right: 0,\r\n      textAlign: \"center\",\r\n      color: \"grey\",\r\n    },\r\n  });\r\n  return (\r\n\r\n    <Document>\r\n      <Page size=\"A4\" style={styles.body}>\r\n        <Text style={styles.title}>Invoice</Text>\r\n        <Table\r\n          data={order.products}\r\n          style={styles.title}\r\n        >\r\n            <TableHeader>\r\n                <TableCell>\r\n                    Item Name\r\n                </TableCell>\r\n                <TableCell>\r\n                  Color\r\n                </TableCell>\r\n                <TableCell>\r\n                  Quantity \r\n                </TableCell>\r\n                <TableCell>\r\n                  Unit Price\r\n                </TableCell>\r\n                <TableCell>\r\n                  Price\r\n                </TableCell>\r\n            </TableHeader>\r\n            <TableBody>\r\n                <DataTableCell getContent={(r) => r.product.title}/>\r\n                <DataTableCell getContent={(r) => r.color}/>\r\n                <DataTableCell getContent={(r) => r.count}/>\r\n                <DataTableCell getContent={(r) => `$${r.product.price}`}/>    \r\n                <DataTableCell getContent={(r) => `$${r.product.price*r.count}`}/>    \r\n            </TableBody>\r\n        </Table>\r\n        \r\n      </Page>\r\n    </Document>  \r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nexport default Invoice;\r\n","D:\\MERN\\client\\src\\components\\order\\OrderBoard.js",[],"D:\\MERN\\client\\src\\functions\\adminFunction.js",[],"D:\\MERN\\client\\src\\components\\order\\PaymentInfo.js",[],{"ruleId":"379","replacedBy":"380"},{"ruleId":"381","replacedBy":"382"},{"ruleId":"383","severity":1,"message":"384","line":10,"column":10,"nodeType":"385","messageId":"386","endLine":10,"endColumn":17},{"ruleId":"387","severity":1,"message":"388","line":17,"column":5,"nodeType":"389","endLine":17,"endColumn":7,"suggestions":"390"},{"ruleId":"383","severity":1,"message":"391","line":23,"column":11,"nodeType":"385","messageId":"386","endLine":23,"endColumn":20},{"ruleId":"383","severity":1,"message":"392","line":24,"column":11,"nodeType":"385","messageId":"386","endLine":24,"endColumn":23},{"ruleId":"383","severity":1,"message":"393","line":2,"column":23,"nodeType":"385","messageId":"386","endLine":2,"endColumn":31},{"ruleId":"387","severity":1,"message":"394","line":24,"column":5,"nodeType":"389","endLine":24,"endColumn":7,"suggestions":"395"},{"ruleId":"387","severity":1,"message":"396","line":18,"column":6,"nodeType":"389","endLine":18,"endColumn":13,"suggestions":"397"},{"ruleId":"387","severity":1,"message":"398","line":16,"column":5,"nodeType":"389","endLine":16,"endColumn":7,"suggestions":"399"},{"ruleId":"383","severity":1,"message":"400","line":4,"column":56,"nodeType":"385","messageId":"386","endLine":4,"endColumn":70},{"ruleId":"383","severity":1,"message":"384","line":16,"column":11,"nodeType":"385","messageId":"386","endLine":16,"endColumn":18},{"ruleId":"383","severity":1,"message":"401","line":2,"column":9,"nodeType":"385","messageId":"386","endLine":2,"endColumn":13},{"ruleId":"383","severity":1,"message":"402","line":12,"column":11,"nodeType":"385","messageId":"386","endLine":12,"endColumn":15},{"ruleId":"383","severity":1,"message":"403","line":12,"column":17,"nodeType":"385","messageId":"386","endLine":12,"endColumn":24},{"ruleId":"383","severity":1,"message":"384","line":14,"column":11,"nodeType":"385","messageId":"386","endLine":14,"endColumn":18},{"ruleId":"387","severity":1,"message":"404","line":20,"column":5,"nodeType":"389","endLine":20,"endColumn":7,"suggestions":"405"},{"ruleId":"383","severity":1,"message":"384","line":19,"column":11,"nodeType":"385","messageId":"386","endLine":19,"endColumn":18},{"ruleId":"383","severity":1,"message":"401","line":2,"column":9,"nodeType":"385","messageId":"386","endLine":2,"endColumn":13},{"ruleId":"383","severity":1,"message":"400","line":4,"column":10,"nodeType":"385","messageId":"386","endLine":4,"endColumn":24},{"ruleId":"383","severity":1,"message":"406","line":4,"column":26,"nodeType":"385","messageId":"386","endLine":4,"endColumn":37},{"ruleId":"383","severity":1,"message":"384","line":16,"column":11,"nodeType":"385","messageId":"386","endLine":16,"endColumn":18},{"ruleId":"387","severity":1,"message":"407","line":24,"column":5,"nodeType":"389","endLine":24,"endColumn":7,"suggestions":"408"},{"ruleId":"383","severity":1,"message":"409","line":35,"column":50,"nodeType":"385","messageId":"386","endLine":35,"endColumn":58},{"ruleId":"383","severity":1,"message":"410","line":35,"column":75,"nodeType":"385","messageId":"386","endLine":35,"endColumn":81},{"ruleId":"383","severity":1,"message":"411","line":35,"column":90,"nodeType":"385","messageId":"386","endLine":35,"endColumn":95},{"ruleId":"383","severity":1,"message":"412","line":35,"column":105,"nodeType":"385","messageId":"386","endLine":35,"endColumn":110},{"ruleId":"387","severity":1,"message":"413","line":43,"column":5,"nodeType":"389","endLine":43,"endColumn":7,"suggestions":"414"},{"ruleId":"383","severity":1,"message":"415","line":8,"column":8,"nodeType":"385","messageId":"386","endLine":8,"endColumn":21},{"ruleId":"383","severity":1,"message":"416","line":1,"column":16,"nodeType":"385","messageId":"386","endLine":1,"endColumn":24},{"ruleId":"383","severity":1,"message":"417","line":4,"column":10,"nodeType":"385","messageId":"386","endLine":4,"endColumn":23},{"ruleId":"383","severity":1,"message":"418","line":7,"column":10,"nodeType":"385","messageId":"386","endLine":7,"endColumn":17},{"ruleId":"383","severity":1,"message":"419","line":35,"column":48,"nodeType":"385","messageId":"386","endLine":35,"endColumn":52},{"ruleId":"383","severity":1,"message":"410","line":35,"column":72,"nodeType":"385","messageId":"386","endLine":35,"endColumn":78},{"ruleId":"383","severity":1,"message":"420","line":37,"column":10,"nodeType":"385","messageId":"386","endLine":37,"endColumn":25},{"ruleId":"383","severity":1,"message":"421","line":38,"column":10,"nodeType":"385","messageId":"386","endLine":38,"endColumn":21},{"ruleId":"383","severity":1,"message":"422","line":38,"column":23,"nodeType":"385","messageId":"386","endLine":38,"endColumn":37},{"ruleId":"387","severity":1,"message":"423","line":48,"column":5,"nodeType":"389","endLine":48,"endColumn":7,"suggestions":"424"},{"ruleId":"383","severity":1,"message":"425","line":18,"column":10,"nodeType":"385","messageId":"386","endLine":18,"endColumn":14},{"ruleId":"383","severity":1,"message":"426","line":18,"column":16,"nodeType":"385","messageId":"386","endLine":18,"endColumn":20},{"ruleId":"383","severity":1,"message":"427","line":14,"column":19,"nodeType":"385","messageId":"386","endLine":14,"endColumn":29},{"ruleId":"387","severity":1,"message":"388","line":19,"column":5,"nodeType":"389","endLine":19,"endColumn":11,"suggestions":"428"},{"ruleId":"383","severity":1,"message":"427","line":14,"column":19,"nodeType":"385","messageId":"386","endLine":14,"endColumn":29},{"ruleId":"387","severity":1,"message":"388","line":19,"column":5,"nodeType":"389","endLine":19,"endColumn":11,"suggestions":"429"},{"ruleId":"387","severity":1,"message":"423","line":20,"column":6,"nodeType":"389","endLine":20,"endColumn":12,"suggestions":"430"},{"ruleId":"383","severity":1,"message":"425","line":25,"column":10,"nodeType":"385","messageId":"386","endLine":25,"endColumn":14},{"ruleId":"383","severity":1,"message":"426","line":25,"column":16,"nodeType":"385","messageId":"386","endLine":25,"endColumn":20},{"ruleId":"431","severity":1,"message":"432","line":96,"column":11,"nodeType":"433","endLine":96,"endColumn":35},{"ruleId":"383","severity":1,"message":"434","line":4,"column":17,"nodeType":"385","messageId":"386","endLine":4,"endColumn":23},{"ruleId":"383","severity":1,"message":"435","line":9,"column":10,"nodeType":"385","messageId":"386","endLine":9,"endColumn":16},{"ruleId":"383","severity":1,"message":"436","line":22,"column":10,"nodeType":"385","messageId":"386","endLine":22,"endColumn":14},{"ruleId":"383","severity":1,"message":"437","line":24,"column":10,"nodeType":"385","messageId":"386","endLine":24,"endColumn":13},{"ruleId":"383","severity":1,"message":"438","line":25,"column":21,"nodeType":"385","messageId":"386","endLine":25,"endColumn":33},{"ruleId":"383","severity":1,"message":"439","line":27,"column":18,"nodeType":"385","messageId":"386","endLine":27,"endColumn":27},{"ruleId":"383","severity":1,"message":"440","line":29,"column":18,"nodeType":"385","messageId":"386","endLine":29,"endColumn":27},{"ruleId":"387","severity":1,"message":"441","line":51,"column":5,"nodeType":"389","endLine":51,"endColumn":7,"suggestions":"442"},{"ruleId":"387","severity":1,"message":"443","line":107,"column":5,"nodeType":"389","endLine":107,"endColumn":9,"suggestions":"444"},{"ruleId":"383","severity":1,"message":"416","line":1,"column":15,"nodeType":"385","messageId":"386","endLine":1,"endColumn":23},{"ruleId":"383","severity":1,"message":"445","line":2,"column":23,"nodeType":"385","messageId":"386","endLine":2,"endColumn":34},{"ruleId":"383","severity":1,"message":"446","line":2,"column":9,"nodeType":"385","messageId":"386","endLine":2,"endColumn":20},{"ruleId":"447","severity":1,"message":"448","line":34,"column":20,"nodeType":"449","messageId":"450","endLine":34,"endColumn":22},{"ruleId":"447","severity":1,"message":"448","line":56,"column":20,"nodeType":"449","messageId":"450","endLine":56,"endColumn":22},{"ruleId":"447","severity":1,"message":"448","line":76,"column":20,"nodeType":"449","messageId":"450","endLine":76,"endColumn":22},{"ruleId":"383","severity":1,"message":"434","line":3,"column":18,"nodeType":"385","messageId":"386","endLine":3,"endColumn":24},{"ruleId":"387","severity":1,"message":"394","line":30,"column":5,"nodeType":"389","endLine":30,"endColumn":7,"suggestions":"451"},{"ruleId":"387","severity":1,"message":"394","line":38,"column":5,"nodeType":"389","endLine":38,"endColumn":7,"suggestions":"452"},{"ruleId":"383","severity":1,"message":"401","line":2,"column":9,"nodeType":"385","messageId":"386","endLine":2,"endColumn":13},{"ruleId":"383","severity":1,"message":"453","line":6,"column":10,"nodeType":"385","messageId":"386","endLine":6,"endColumn":22},{"ruleId":"387","severity":1,"message":"454","line":38,"column":5,"nodeType":"389","endLine":38,"endColumn":7,"suggestions":"455"},{"ruleId":"383","severity":1,"message":"456","line":2,"column":32,"nodeType":"385","messageId":"386","endLine":2,"endColumn":36},{"ruleId":"383","severity":1,"message":"457","line":2,"column":50,"nodeType":"385","messageId":"386","endLine":2,"endColumn":65},"no-native-reassign",["458"],"no-negated-in-lhs",["459"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadproducts'. Either include it or remove the dependency array.","ArrayExpression",["460"],"'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'Redirect' is defined but never used.","React Hook useEffect has a missing dependency: 'user.token'. Either include it or remove the dependency array.",["461"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["462"],"React Hook useEffect has a missing dependency: 'loadAllOrders'. Either include it or remove the dependency array.",["463"],"'updateCategory' is defined but never used.","'Link' is defined but never used.","'name' is assigned a value but never used.","'setName' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadCategory'. Either include it or remove the dependency array.",["464"],"'getCategory' is defined but never used.","React Hook useEffect has missing dependencies: 'loadCategories' and 'loadSub'. Either include them or remove the dependency array.",["465"],"'category' is assigned a value but never used.","'images' is assigned a value but never used.","'color' is assigned a value but never used.","'brand' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loadCategories' and 'loadSubs'. Either include them or remove the dependency array.",["466"],"'CreateProduct' is defined but never used.","'useState' is defined but never used.","'createProduct' is defined but never used.","'getSubs' is defined but never used.","'subs' is assigned a value but never used.","'currentCategory' is assigned a value but never used.","'currentSubs' is assigned a value but never used.","'setCurrentSubs' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadProduct'. Either include it or remove the dependency array.",["467"],"'user' is assigned a value but never used.","'cart' is assigned a value but never used.","'setPerPage' is assigned a value but never used.",["468"],["469"],["470"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Button' is defined but never used.","'search' is assigned a value but never used.","'star' is assigned a value but never used.","'sub' is assigned a value but never used.","'setShippings' is assigned a value but never used.","'setBrands' is assigned a value but never used.","'setColors' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'text'. Either include it or remove the dependency array.",["471"],"React Hook useEffect has a missing dependency: 'price'. Either include it or remove the dependency array.",["472"],"'useDispatch' is defined but never used.","'useSelector' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["473"],["474"],"'EditOutlined' is defined but never used.","React Hook useEffect has missing dependencies: 'coupon' and 'user.token'. Either include them or remove the dependency array.",["475"],"'View' is defined but never used.","'PDFDownloadLink' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"476","fix":"477"},{"desc":"478","fix":"479"},{"desc":"480","fix":"481"},{"desc":"482","fix":"483"},{"desc":"484","fix":"485"},{"desc":"486","fix":"487"},{"desc":"488","fix":"489"},{"desc":"490","fix":"491"},{"desc":"492","fix":"493"},{"desc":"492","fix":"494"},{"desc":"495","fix":"496"},{"desc":"497","fix":"498"},{"desc":"499","fix":"500"},{"desc":"478","fix":"501"},{"desc":"478","fix":"502"},{"desc":"503","fix":"504"},"Update the dependencies array to be: [loadproducts]",{"range":"505","text":"506"},"Update the dependencies array to be: [user.token]",{"range":"507","text":"508"},"Update the dependencies array to be: [count, history]",{"range":"509","text":"510"},"Update the dependencies array to be: [loadAllOrders]",{"range":"511","text":"512"},"Update the dependencies array to be: [loadCategory]",{"range":"513","text":"514"},"Update the dependencies array to be: [loadCategories, loadSub]",{"range":"515","text":"516"},"Update the dependencies array to be: [loadCategories, loadSubs]",{"range":"517","text":"518"},"Update the dependencies array to be: [loadProduct]",{"range":"519","text":"520"},"Update the dependencies array to be: [loadproducts, page]",{"range":"521","text":"522"},{"range":"523","text":"522"},"Update the dependencies array to be: [loadProduct, slug]",{"range":"524","text":"525"},"Update the dependencies array to be: [text]",{"range":"526","text":"527"},"Update the dependencies array to be: [ok, price]",{"range":"528","text":"529"},{"range":"530","text":"508"},{"range":"531","text":"508"},"Update the dependencies array to be: [coupon, user.token]",{"range":"532","text":"533"},[609,611],"[loadproducts]",[836,838],"[user.token]",[444,451],"[count, history]",[526,528],"[loadAllOrders]",[699,701],"[loadCategory]",[897,899],"[loadCategories, loadSub]",[1476,1478],"[loadCategories, loadSubs]",[1593,1595],"[loadProduct]",[585,591],"[loadproducts, page]",[583,589],[658,664],"[loadProduct, slug]",[1827,1829],"[text]",[2909,2913],"[ok, price]",[1164,1166],[1304,1306],[1400,1402],"[coupon, user.token]"]